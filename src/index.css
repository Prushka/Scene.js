/*
 * Copyright 2022 Dan Lyu.
 */

@import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;400;500;600;700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css");

:root {
    --scene-base: #ffffff;
    --scene-base-s1: #F5F5F5;
    --scene-base-inv: #000000;
    --scene-base-inv-s1: #1c1c1c;
    --scene-base-inv-s2: #696969;
    --prop-list-width: 172px;
    --toolbar-button-width: 40px;
    --scene-dialog-header-button-not-selected-hover: #6565a1;
    --scene-dialog-header-button-not-selected-text-hover: #6565a1;
    --scene-snackbar: #EB7777;
    --scene-timeline-button-selected: #8688BC;
    --scene-timeline-button-selected-hover: #6565a1;
    --scene-timeline-button-not-selected: #EB7777;
    --scene-timeline-button-not-selected-hover: #d96262;
    --scene-timeline-button-text: #ffffff;
    --scene-snackbar-text: #ffffff;
    --scene-dialog-key: #6565a1;
    --scene-dialog-value: #EB7777;
    --scene-dialog-content: #000000;
    --scene-button-text: #ffffff;
    --scene-button-color: #8688BC;
    --scene-button-hover: #6565a1;
    --scene-trans-base: rgba(255, 255, 255, 0.95);
    --scene-tooltip-background: #313131;
    --scene-tooltip-text: #ffffff;
}

.pointer {
    cursor: pointer;
}

.root-container {
    width: 100%;
    height: 100%;
    background-color: var(--scene-base-s1);
    font-family: Comfortaa, serif;
    position: relative;
    overflow: hidden;
}

.overlay {
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 40%);
    position: fixed;
    z-index: 1250;
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.overlay > img {
    height: auto;
    width: auto;
    max-width: 92%;
    max-height: 92%;
}

/* TODO: clean this up */

.prop__dialog {
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 40%);
    position: fixed;
    z-index: 1250;
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.prop__dialog--popup {
    background-color: var(--scene-base);
    margin: 0;
    position: absolute;
    z-index: 1300;
    padding: 12px 15px;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;

    width: 60%;
    height: 73%;
}

.prop__dialog--embedded {
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    background-color: var(--scene-trans-base);
    position: absolute;
    z-index: 1100;
}

/* Cannot use media since we don't define the root element's width */
.prop__dialog--embedded--normal {
    padding: 15px 15px 15px 21px;
    width: 400px;
    height: 500px;
    right: 20px;
    bottom: 80px;
}

.prop__dialog--embedded--mobile {
    padding: 12px 6px;
    width: 100%;
    height: 100%;
}

.prop__dialog--popup span,
.prop__dialog--embedded span {
    font-family: Inter, serif;
}

.prop__dialog--popup .header {
    display: flex;
    align-items: center;
    justify-content: center;
}

.prop__dialog--popup .header i {
    font-size: 2.9rem;
    align-self: end;
    padding: 10px;
    margin-left: auto;
}

.prop__dialog--embedded .header {
    display: flex;
    align-items: center;
    margin-bottom: 9px;
}

.prop__dialog--embedded .header i {
    font-size: 2.5rem;
    align-self: end;
    margin-left: auto;
}

.prop__dialog__close {
    color: var(--scene-base-inv-s1)
}

.header span {
    font-size: 1.5rem;
    font-weight: 600;
    padding: 6px 10px;
    color: var(--scene-base-inv-s1);
    border: 2px solid var(--scene-base-inv-s1);
    border-radius: 8px;
    transition-duration: .2s;
    transition-property: background-color, color;
    cursor: pointer;
    margin-right: 12px;
}

.content-text--normal {
    color: var(--scene-dialog-content)
}

.content .image__container {
    align-items: center;
    text-align: center;
    display: flex;
    flex-direction: column;

    padding: 8px 0 16px 0;
}

.content .image__container span {
    padding: 0 0 8px 0;
    font-weight: 500;
}

.content .image__container img {
    width: 95%;
    cursor: pointer;
}

.content__key-value {
    padding: 3px 0;
}

.content__key {
    color: var(--scene-dialog-key) !important;
    font-weight: 700;
}

.content__value {
    color: var(--scene-dialog-value) !important;
    font-weight: 600;
}

.header__button--selected {
    background-color: var(--scene-base-inv-s1);
    color: var(--scene-base) !important;
}

.header__button--not-selected {

}

.header__button--not-selected:hover {
    border-color: var(--scene-dialog-header-button-not-selected-hover);
    color: var(--scene-dialog-header-button-not-selected-text-hover);
}

.prop__dialog--popup .content,
.prop__dialog--embedded .content {
    display: flex;
    overflow: auto;
    min-height: 0;
    flex-direction: column;
}

.prop__dialog--popup .content span,
.prop__dialog--embedded .content span {
    font-size: 1.1rem;
}

.prop__dialog--popup .footer,
.prop__dialog--embedded .footer {
    display: flex;
    margin-top: auto;
    padding-top: 13px;
    align-self: end;
    justify-content: center;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
}

.prop__dialog--popup .footer span,
.prop__dialog--embedded .footer span {
    font-size: 1rem;
    font-weight: 700;
    margin-left: 13px;
}

.prop__dialog--popup .footer i,
.prop__dialog--embedded .footer i {
    font-size: 1.2rem;
}

.footer {
    bottom: 0;
}

.toolbar {
    display: flex;
    flex-direction: column;
    width: var(--toolbar-button-width);
    bottom: 0;
    transition-duration: 0.3s;
    transition-timing-function: ease-in;
    position: absolute;
    margin: 0 0 4px 10px;
}


.toolbar__button-container {
    display: flex;
    align-items: center;

    z-index: 1200;
    margin: 4px 0;
}

.toolbar__button-container:hover .toolbar__tooltip span{
    opacity: 1;
}


.toolbar__tooltip {
    max-height: 40px;
    justify-content: center;
}

.toolbar__tooltip span {
    transition-duration: .1s;
    opacity: 0;
    margin-left: 10px;
    background-color: var(--scene-tooltip-background);
    color: var(--scene-tooltip-text);
    border-radius: 8px;
    padding: 10px;
    white-space: nowrap;
}

.button {
    text-align: center;
    align-self: center;
    font-weight: bold;
    cursor: pointer;
    transition-duration: 0.3s;
    border-radius: 4px;
    padding: 9px 12px;
    width: 100%;
    box-sizing: border-box;
}

.button i {
    font-size: 1.1rem;
}

.button--purple:hover {
    background-color: var(--scene-button-hover);
}

.button--purple {
    color: var(--scene-button-text);
    background-color: var(--scene-button-color);
}

.timeline-container {
    display: flex;
    width: calc(100% - var(--toolbar-button-width) - 3px);
    margin-top: auto;
    padding: 0 20px;
    position: absolute;
    bottom: 0;
    margin-bottom: 8px;
    left: calc(var(--toolbar-button-width) + 3px);
    box-sizing: border-box;
    z-index: 1000;
    overflow: auto;
}

.timeline {
    display: flex;
    width: 100%;
}

.timeline__frame-container {
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    justify-content: center;
}

.timeline__frame-container .progress-container {
    display: flex;
    flex-direction: row;
    width: 100%;
}

.timeline__frame-container .progress {
    border-bottom: 4px solid;
}

.timeline__frame-container .progress-finished {
    border-bottom-color: var(--scene-timeline-button-selected);
    width: 0;
}

.timeline__frame-container .progress-not {
    border-bottom-color: var(--scene-timeline-button-not-selected);
    width: 100%;
}

.timeline__frame {
    align-self: start;
    background-color: var(--scene-timeline-button-not-selected);
    color: var(--scene-timeline-button-text);
    padding: 7px 15px 4px 15px;
    border-radius: 4px;
    font-weight: 600;
    transition-duration: 0.3s;
}

.timeline__frame--selected {
    background-color: var(--scene-timeline-button-selected);
}

.timeline__frame--selected:hover {
    background-color: var(--scene-timeline-button-selected-hover);
}

.timeline__frame--not-selected:hover {
    background-color: var(--scene-timeline-button-not-selected-hover);
}

.prop__list-container {
    display: flex;
    z-index: 1000;
    position: absolute;
    left: 0;
    transition-duration: 0.5s;
    transition-timing-function: ease-in;
}

.prop__list-container--closed {
    left: calc(var(--prop-list-width) * -1) !important
}

.hide__icon-container {
    background-color: var(--scene-trans-base);
    align-self: start;
    padding: 10px 6px;
    border-top-right-radius: 8px;
    border-bottom-right-radius: 8px;
}

.hide__icon-container i {
    font-size: 1.45rem;
    color: var(--scene-base-inv-s1);

}

.hide__icon-rotate-container {
    transition: transform .5s;
    transition-timing-function: ease-in;
}

.icon-animated-left {
    transform: rotate(0deg);
}

.icon-animated-right {
    transform: rotate(-180deg);
}

.prop__list {
    display: flex;
    flex-direction: column;
    width: var(--prop-list-width);
    max-height: 200px;
    overflow: auto;
    background-color: var(--scene-trans-base);
    top: 0;
    left: 0;
}

.prop__list__item {
    display: flex;
    padding: 14px 12px 14px 18px;
}

.prop__list__item--not-selected {
    color: var(--scene-base-inv);
}

.prop__list__item--not-selected span {
    color: var(--scene-base-inv);
}

.prop__list__item--not-selected:hover {
    background-color: var(--scene-base-s1);
}

.prop__list__item--selected {
    background-color: var(--scene-base-inv-s1);
}

.prop__list__item--selected span {
    color: var(--scene-base)
}

.prop__list__item span {
    width: 110px;
    margin: 0 0.3rem 0 1.2rem;
    font-size: 0.95rem;
    font-weight: 700;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

.view__prop {
    /*position: absolute;*/
    pointer-events: bounding-box;
    cursor: pointer;
    transition-property: transform;
}

.view__prop text {
    font: normal 12px Comfortaa;
}

.view__prop--selected {
    outline: 1px solid var(--scene-base-inv-s2);
    outline-offset: 7px;
    filter: drop-shadow(1px 1px 1px rgba(0, 0, 0, .09));
    /*stroke: var(--scene-base-inv-s2);*/
    /*stroke-width: 1px;*/
    /*stroke-dasharray: 2,2;*/
}

.view__prop:hover {
    filter: drop-shadow(1px 1px 1px rgba(0, 0, 0, .13));
}

.view-svg {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    position: absolute;
}

.view__prop g {
    transition-property: opacity;
    transition-timing-function: ease-in-out;
}

.snackbar {
    margin-top: 15px;
    padding: 8px;
    display: inline-flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
    top: 0;
    background-color: var(--scene-snackbar);
    color: var(--scene-snackbar-text);
    z-index: 1400;
    border-radius: 4px;
    transition-duration: .3s;
    font-weight: 600;
    opacity: 1;
}

.snackbar--normal {
    width: 300px;
    font-size: 16px;
}

.snackbar--mobile {
    width: 85%;
    font-size: 14px;
}

.snackbar--closed {
    top: -60px;
    opacity: 0;
}

.view__prop__connection {
    stroke: var(--scene-base-inv-s2);
    stroke-width: 1px;
}

.step-card {
    display: flex;
    flex-direction: column;
    padding: 12px 0 14px 0;
}

.bottom-gray-border {
    border-bottom: 2px solid var(--scene-base-inv-s2);
}

.step-card > div {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    font-weight: 600;
}

.step-card__step {
    font-weight: 500;
    border-radius: 50%;
    background-color: var(--scene-base-inv-s1);
    color: var(--scene-base);
    height: 34px;
    width: 34px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: 10px;
}

/* https://stackoverflow.com/questions/11131875/what-is-the-cleanest-way-to-disable-css-transition-effects-temporarily */
.no-transition {
    -webkit-transition: none !important;
    -moz-transition: none !important;
    -o-transition: none !important;
    transition: none !important;
}