# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Docker CI/CD - main

on:
  push:
    branches: [ 'main' ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: meinya/scene.js:latest

  deploy-image:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    timeout-minutes: 3
    steps:
      - name: Deploy using Post URI
        id: posturi
        uses: fjogeleit/http-request-action@v1
        with:
          preventFailureOnNoResponse: 'true'
          timeout: 20000
          url: ${{ secrets.DEPLOYMENT_WEBHOOK_URL }}
          method: 'POST'

      - name: Discord notification
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          details: Docker POST URI Invocation Results ${{ steps.posturi.outputs.response }}
          color: '#2E8B57'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  notify-always:
    needs: [ build-and-push-image, deploy-image ]
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        uses: rjstone/discord-webhook-notify@v1
        if: always()
        with:
          severity: info
          details: Docker CI/CD step has completed (if there's no error before this message, this CI/CD should be successful)
          color: '#2E8B57'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
