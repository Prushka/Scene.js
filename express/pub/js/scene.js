/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("sceneBlocking", [], factory);
	else if(typeof exports === 'object')
		exports["sceneBlocking"] = factory();
	else
		root["sceneBlocking"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/component/Component.ts":
/*!************************************!*\
  !*** ./src/component/Component.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CustomComponent\": () => (/* binding */ CustomComponent),\n/* harmony export */   \"SceneComponent\": () => (/* binding */ SceneComponent)\n/* harmony export */ });\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\nclass CustomComponent {\r\n    unmount() {\r\n        this.listen().forEach(s => {\r\n            s.unsubscribe(this);\r\n        });\r\n        this.actions().forEach(([state, before, after]) => {\r\n            if (before || after) {\r\n                state.unsubscribe(this);\r\n            }\r\n        });\r\n    }\r\n    mount() {\r\n        // listen will trigger render on every state update\r\n        this.listen().forEach(s => {\r\n            s.subscribe(this);\r\n        });\r\n        // action will trigger the action function on the specified state update\r\n        this.actions().forEach(([state, before, after]) => {\r\n            if (before || after) {\r\n                state.subscribeActions(this, before, after);\r\n            }\r\n        });\r\n    }\r\n    listen() {\r\n        return [];\r\n    }\r\n    renderComponent() {\r\n        this.renderInIds().forEach(elementId => {\r\n            const el = this.render();\r\n            const parent = document.getElementById(elementId);\r\n            if (parent) {\r\n                if (Array.isArray(el)) {\r\n                    parent.innerHTML = el.join('');\r\n                }\r\n                else if (typeof el === 'string') {\r\n                    parent.innerHTML = el;\r\n                }\r\n                else {\r\n                    parent.innerHTML = '';\r\n                    parent.append(el);\r\n                }\r\n            }\r\n        });\r\n        this.afterRender();\r\n    }\r\n    actions() {\r\n        return [];\r\n    }\r\n    renderInIds() {\r\n        return [];\r\n    }\r\n    afterConstructor() {\r\n    }\r\n    hook(key, c) {\r\n        this.hookedComponents[key] = c;\r\n    }\r\n}\r\nclass SceneComponent extends CustomComponent {\r\n    constructor(context) {\r\n        super();\r\n        this.scene = context;\r\n        [this.ids, this.idCtx] = [this.scene.ids, this.scene.idContext];\r\n        this.snackbarCtx = this.scene.snackbarCtx;\r\n        this.overlayCtx = this.scene.overlayCtx;\r\n        this.themeCtx = this.scene.themeCtx;\r\n        this.propCtx = this.scene.propCtx;\r\n        this.getViewportCtx = this.scene.getViewportGetter();\r\n        this.afterConstructor();\r\n        this.mount();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/Component.ts?");

/***/ }),

/***/ "./src/component/FilterDialog.ts":
/*!***************************************!*\
  !*** ./src/component/FilterDialog.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FilterDialog\": () => (/* binding */ FilterDialog)\n/* harmony export */ });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/component/Component.ts\");\n/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Utils */ \"./src/utils/Utils.ts\");\n/* harmony import */ var _context_IdContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/IdContext */ \"./src/context/IdContext.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\n\r\n\r\nclass FilterDialog extends _Component__WEBPACK_IMPORTED_MODULE_0__.SceneComponent {\r\n    listen() {\r\n        return [this.propCtx.propsState, this.propCtx.selectedPropTypesState];\r\n    }\r\n    actions() {\r\n        return [[this.propCtx.searchPropValueState, () => {\r\n                }, () => {\r\n                    this.renderFilteredProps();\r\n                }]];\r\n    }\r\n    renderInIds() {\r\n        return [this.ids.OVERLAY];\r\n    }\r\n    afterRender() {\r\n        this.renderFilteredProps();\r\n        const propCtx = this.propCtx;\r\n        this.scene.$('.list__items__item').on('click', (e) => {\r\n            const [_, type] = this.idCtx.extractIdType(e.currentTarget.id, ..._context_IdContext__WEBPACK_IMPORTED_MODULE_2__.IdTypes.PROP_TYPE_TOGGLE);\r\n            if (type && type.length > 0) {\r\n                this.propCtx.toggleSelectedPropType(type[0]);\r\n            }\r\n        });\r\n        this.scene.$(`#${this.ids.PROP_SEARCH_INPUT}`).on('input', function (e) {\r\n            propCtx.searchValue = $(this).val().toString();\r\n        });\r\n    }\r\n    static createTitle(text) {\r\n        const title = document.createElement('div');\r\n        title.innerText = text;\r\n        title.classList.add('filter__modal__title');\r\n        return title;\r\n    }\r\n    static createListContainer() {\r\n        const filteredProps = document.createElement('div');\r\n        filteredProps.classList.add('list__items');\r\n        return filteredProps;\r\n    }\r\n    renderFilteredProps() {\r\n        const propListContainer = document.getElementById(this.ids.PROP_FILTERED_LIST);\r\n        const temp = document.createElement('div');\r\n        this.propCtx.filteredProps.forEach(prop => {\r\n            const propElement = document.createElement('div');\r\n            propElement.classList.add('list__items__item');\r\n            const span = this.propCtx.getPropSpanText(prop);\r\n            const svg = this.propCtx.getPropSVG(prop, null, 1);\r\n            propElement.append(span, svg);\r\n            temp.append(propElement);\r\n        });\r\n        if (propListContainer) {\r\n            propListContainer.innerHTML = temp.innerHTML;\r\n        }\r\n    }\r\n    render() {\r\n        const content = document.createElement('div');\r\n        content.classList.add('filter__modal__container');\r\n        const filterPropsByTypeContainer = document.createElement('div');\r\n        filterPropsByTypeContainer.classList.add('input__box');\r\n        const typeListContainer = FilterDialog.createListContainer();\r\n        this.propCtx.allPropTypes.forEach(type => {\r\n            const propElement = document.createElement('div');\r\n            propElement.classList.add('list__items__item');\r\n            if (this.propCtx.isPropTypeSelected(type)) {\r\n                propElement.classList.add('list__items__item--selected');\r\n            }\r\n            else {\r\n                propElement.classList.add('list__items__item--not-selected');\r\n            }\r\n            const span = document.createElement('span');\r\n            span.innerText = type;\r\n            const svg = this.propCtx.getPropSVG(type, 'white', 1);\r\n            propElement.append(span, svg);\r\n            propElement.id = this.idCtx.PROP_TYPE_TOGGLE(null, type);\r\n            typeListContainer.append(propElement);\r\n        });\r\n        const searchTextField = document.createElement('div');\r\n        searchTextField.classList.add('textfield');\r\n        const label = FilterDialog.createTitle('Search Prop Name');\r\n        label.classList.add('textfield__label');\r\n        const input = document.createElement('input');\r\n        input.classList.add('input__box', 'textfield__input');\r\n        input.setAttribute('value', this.propCtx.searchValue);\r\n        input.id = this.ids.PROP_SEARCH_INPUT;\r\n        searchTextField.append(label, input);\r\n        filterPropsByTypeContainer.append(FilterDialog.createTitle('Select Prop Types'), typeListContainer);\r\n        const filteredPropsContainer = document.createElement('div');\r\n        filteredPropsContainer.classList.add('input__box');\r\n        const propListContainer = FilterDialog.createListContainer();\r\n        propListContainer.id = this.ids.PROP_FILTERED_LIST;\r\n        filteredPropsContainer.append(FilterDialog.createTitle('Filtered Props'), propListContainer);\r\n        content.append(searchTextField, filterPropsByTypeContainer, filteredPropsContainer);\r\n        return (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_1__.createDialog)('Filter Props', content);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/FilterDialog.ts?");

/***/ }),

/***/ "./src/component/Footer.ts":
/*!*********************************!*\
  !*** ./src/component/Footer.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Footer\": () => (/* binding */ Footer),\n/* harmony export */   \"ProgressBarTupleElements\": () => (/* binding */ ProgressBarTupleElements)\n/* harmony export */ });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/component/Component.ts\");\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Utils */ \"./src/utils/Utils.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\n\r\n\r\nclass ProgressBarTupleElements {\r\n    constructor(progressFinished, progressUnfinished) {\r\n        this.progressFinished = progressFinished;\r\n        this.progressUnfinished = progressUnfinished;\r\n    }\r\n    static setStyles(element, width, transitionDuration, transitionFunction) {\r\n        element.style.width = width;\r\n        element.style.transitionDuration = transitionDuration;\r\n        if (transitionDuration == '0s') {\r\n            element.classList.add('no-transition');\r\n        }\r\n        else {\r\n            element.classList.remove('no-transition');\r\n        }\r\n        if (transitionFunction) {\r\n            element.style.transitionTimingFunction = transitionFunction;\r\n        }\r\n    }\r\n    full() {\r\n        ProgressBarTupleElements.setStyles(this.progressFinished, '100%', '0s');\r\n        ProgressBarTupleElements.setStyles(this.progressUnfinished, '0%', '0s');\r\n    }\r\n    reset() {\r\n        ProgressBarTupleElements.setStyles(this.progressFinished, '0%', '0s');\r\n        ProgressBarTupleElements.setStyles(this.progressUnfinished, '100%', '0s');\r\n    }\r\n    setTransition(duration, transitionFunction, finished) {\r\n        ProgressBarTupleElements.setStyles(this.progressFinished, finished ? \"100%\" : \"0%\", duration, transitionFunction);\r\n        ProgressBarTupleElements.setStyles(this.progressUnfinished, finished ? \"0%\" : \"100%\", duration, transitionFunction);\r\n    }\r\n}\r\nclass Footer extends _Component__WEBPACK_IMPORTED_MODULE_0__.SceneComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.timeouts = [];\r\n    }\r\n    afterConstructor() {\r\n        this.open = (0,_state_State__WEBPACK_IMPORTED_MODULE_1__.createState)(true);\r\n        this.playing = (0,_state_State__WEBPACK_IMPORTED_MODULE_1__.createState)(false);\r\n    }\r\n    listen() {\r\n        return [];\r\n    }\r\n    getProgressBars(frame) {\r\n        const progressFinished = document.getElementById(this.idCtx.FRAME_PROGRESS_FINISHED(frame));\r\n        const progressUnfinished = document.getElementById(this.idCtx.FRAME_PROGRESS_UNFINISHED(frame));\r\n        if (progressUnfinished && progressFinished) {\r\n            return new ProgressBarTupleElements(progressFinished, progressUnfinished);\r\n        }\r\n        return null;\r\n    }\r\n    actions() {\r\n        const setFrameButton = (frame, selected) => {\r\n            const frameElement = document.getElementById(this.idCtx.TIMELINE_FRAME(frame));\r\n            frameElement.classList.remove(!selected ? \"timeline__frame--selected\" : \"timeline__frame--not-selected\");\r\n            frameElement.classList.add(selected ? \"timeline__frame--selected\" : \"timeline__frame--not-selected\");\r\n        };\r\n        return [[this.themeCtx.currentState, null, () => {\r\n                    const theme = this.themeCtx.currentTheme;\r\n                    const themeButton = document.getElementById(this.ids.TOOLBAR_THEME_BUTTON);\r\n                    const iconEl = themeButton.querySelector('i');\r\n                    const spanEl = themeButton.parentElement.querySelector('span');\r\n                    if (iconEl) {\r\n                        (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.setClassList)(iconEl, ...theme.icon.split(' '));\r\n                    }\r\n                    if (spanEl) {\r\n                        spanEl.innerText = `Theme (${this.themeCtx.themeToDisplay})`;\r\n                    }\r\n                }], [this.open, (_, open) => {\r\n                    const toolbarElement = document.getElementById(this.ids.TOOLBAR);\r\n                    // TODO: y does the bounding rect have a ~10px random offset?\r\n                    if (toolbarElement) {\r\n                        const bottom = open ? 0 : -(toolbarElement.getBoundingClientRect().height - 45);\r\n                        toolbarElement.style.bottom = `${bottom}px`;\r\n                    }\r\n                }], [this.playing, (_, playing) => {\r\n                    const playButton = document.getElementById(this.ids.TOOLBAR_PLAY_BUTTON);\r\n                    const iconEl = playButton.querySelector('i');\r\n                    const spanEl = playButton.parentElement.querySelector('span');\r\n                    if (playing) {\r\n                        (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.setClassList)(iconEl, \"bi\", \"bi-pause-fill\");\r\n                        spanEl.innerText = 'Pause';\r\n                    }\r\n                    else {\r\n                        (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.setClassList)(iconEl, \"bi\", \"bi-play-fill\");\r\n                        spanEl.innerText = 'Play';\r\n                    }\r\n                }],\r\n            [this.scene.propCtx.currentFrameState, (oldFrame, newFrame, previousFrame) => {\r\n                    console.log(`Frame: ${previousFrame} | ${oldFrame} -> ${newFrame}`);\r\n                    if (oldFrame == null) {\r\n                        return;\r\n                    }\r\n                    const frameSeconds = this.scene.getFrameSeconds(oldFrame);\r\n                    if (this.propCtx.ifJumpOneLiterally(oldFrame, newFrame)) {\r\n                        // normal flow, (start -> end, one frame jump) will trigger progress bar change and frame button timeout change\r\n                        setFrameButton(oldFrame, true);\r\n                        this.timeouts.push(setTimeout(() => {\r\n                            setFrameButton(newFrame, true);\r\n                        }, frameSeconds * 1000));\r\n                        if (previousFrame == null || this.propCtx.ifJumpOne(previousFrame, oldFrame)) {\r\n                            // force the previous progress bar to be full if the user jumps another frame ahead\r\n                            const previousProgressBars = this.getProgressBars(oldFrame - 1);\r\n                            if (previousProgressBars) {\r\n                                previousProgressBars.full();\r\n                            }\r\n                        }\r\n                        const progressBars = this.getProgressBars(oldFrame);\r\n                        if (progressBars) {\r\n                            progressBars.setTransition(frameSeconds + 's', this.scene.config.transitionTimingFunction, true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // user skips frames, reset progress bar and frame button styles\r\n                        this.timeouts.forEach(t => {\r\n                            clearTimeout(t);\r\n                        });\r\n                        for (let frame = 1; frame <= this.propCtx.totalFrames; frame++) {\r\n                            setFrameButton(frame, false);\r\n                            const progressBars = this.getProgressBars(frame);\r\n                            if (progressBars) {\r\n                                progressBars.reset();\r\n                            }\r\n                        }\r\n                        setFrameButton(newFrame, true);\r\n                    }\r\n                }]];\r\n    }\r\n    renderInIds() {\r\n        return [this.ids.ROOT_FOOTER];\r\n    }\r\n    afterRender() {\r\n        this.open.set(this.scene.config.defaultOpenToolbar);\r\n        const hookButton = (action, id) => {\r\n            this.scene.$(`#${id}`).on(\"click\", (e) => {\r\n                action(document.getElementById(id), e);\r\n            });\r\n        };\r\n        this.scene.$('.timeline__frame').on(\"click\", (e) => {\r\n            const [frame] = this.idCtx.extractIdType(e.target.id);\r\n            this.scene.propCtx.currentFrame = frame;\r\n        });\r\n        hookButton(() => {\r\n            this.open.set(!this.open.get());\r\n        }, this.ids.TOOLBAR_COLLAPSE_BUTTON);\r\n        hookButton(() => {\r\n            this.scene.viewComponent.resetViewport();\r\n            this.snackbarCtx.snackbar(\"Reset Viewport - Frames Based\");\r\n        }, this.ids.TOOLBAR_RESET_FRAMES_BUTTON);\r\n        hookButton(() => {\r\n            this.scene.viewComponent.resetViewport(this.scene.propCtx.currentFrame);\r\n            this.snackbarCtx.snackbar(\"Reset Current Viewport\");\r\n        }, this.ids.TOOLBAR_RESET_CURRENT_BUTTON);\r\n        const nextFrame = () => {\r\n            if (this.playing.get()) {\r\n                const previousFrame = this.scene.propCtx.nextFrame();\r\n                setTimeout(() => {\r\n                    nextFrame();\r\n                }, this.scene.getFrameSeconds(previousFrame) * 1000);\r\n            }\r\n        };\r\n        hookButton(() => {\r\n            this.playing.set(!this.playing.get());\r\n            if (this.playing.get()) {\r\n                nextFrame();\r\n            }\r\n        }, this.ids.TOOLBAR_PLAY_BUTTON);\r\n        hookButton(() => {\r\n            navigator.clipboard.writeText(JSON.stringify(this.scene.config, null, 2)).then(() => this.snackbarCtx.snackbar(\"Copied to clipboard\"));\r\n        }, this.ids.TOOLBAR_EXPORT_BUTTON);\r\n        hookButton(() => {\r\n            this.themeCtx.next();\r\n        }, this.ids.TOOLBAR_THEME_BUTTON);\r\n        hookButton((e) => {\r\n            // binding a fullscreenchange doesn't always work\r\n            e.parentElement.querySelector('span').classList.remove('toolbar__tooltip--visible');\r\n            if (document.fullscreenElement) {\r\n                document.exitFullscreen().then();\r\n            }\r\n            else {\r\n                const element = this.scene.getRootDocument();\r\n                element.requestFullscreen().then();\r\n            }\r\n        }, this.ids.TOOLBAR_FULLSCREEN);\r\n    }\r\n    render() {\r\n        const footerContainer = document.createElement('div');\r\n        const toolbarContainer = document.createElement('div');\r\n        toolbarContainer.id = this.ids.TOOLBAR;\r\n        toolbarContainer.classList.add('toolbar');\r\n        const addButtonToToolbar = (title, iconClasses, id) => {\r\n            const container = document.createElement('div');\r\n            container.classList.add('tooltip', 'toolbar__button-container');\r\n            const toolbarButton = document.createElement('div');\r\n            toolbarButton.id = id;\r\n            // toolbarButton.title = title\r\n            toolbarButton.classList.add('button', 'toolbar__button', 'pointer');\r\n            const icon = document.createElement('i');\r\n            icon.classList.add(...iconClasses.split(' '));\r\n            toolbarButton.append(icon);\r\n            const tooltipText = document.createElement('span');\r\n            tooltipText.innerText = title;\r\n            container.append(toolbarButton, tooltipText);\r\n            toolbarContainer.append(container);\r\n        };\r\n        const currentFrame = this.scene.propCtx.currentFrame;\r\n        addButtonToToolbar('Collapse/Expand', 'bi bi-arrows-collapse', this.ids.TOOLBAR_COLLAPSE_BUTTON);\r\n        addButtonToToolbar('Toggle fullscreen mode', 'bi bi-arrows-fullscreen', this.ids.TOOLBAR_FULLSCREEN);\r\n        addButtonToToolbar('Reset viewport (based on current frame)', 'bi bi-arrows-move', this.ids.TOOLBAR_RESET_CURRENT_BUTTON);\r\n        if (!this.propCtx.isStatic) {\r\n            addButtonToToolbar(\"Reset viewport (based on all frames)\", 'bi bi-bootstrap-reboot', this.ids.TOOLBAR_RESET_FRAMES_BUTTON);\r\n        }\r\n        addButtonToToolbar('Export', 'bi bi-box-arrow-up-right', this.ids.TOOLBAR_EXPORT_BUTTON);\r\n        addButtonToToolbar(`Theme (${this.themeCtx.themeToDisplay})`, this.themeCtx.currentTheme.icon, this.ids.TOOLBAR_THEME_BUTTON);\r\n        if (this.scene.config.displayToolbar) {\r\n            footerContainer.append(toolbarContainer);\r\n        }\r\n        if (!this.scene.propCtx.isStatic) {\r\n            // create a timeline since it's not static\r\n            const timelineContainer = document.createElement('div');\r\n            timelineContainer.classList.add('timeline-container');\r\n            if (!this.scene.config.displayToolbar) {\r\n                timelineContainer.classList.add('timeline-container-full-width');\r\n            }\r\n            for (let f = 0; f < this.propCtx.totalFrames; f++) {\r\n                const frame = f + 1;\r\n                const frameContainer = document.createElement('div');\r\n                frameContainer.classList.add('timeline__frame-container');\r\n                if (frame != this.propCtx.totalFrames) {\r\n                    frameContainer.style.flexGrow = String(Math.floor(this.scene.getFrameSeconds(frame) * 10));\r\n                }\r\n                // The styling (e.g., color etc.,) of a standard html <progress> tag cannot be standardized,\r\n                // that's why a custom div was used\r\n                const progress = document.createElement('div');\r\n                progress.classList.add('progress-container');\r\n                const progressFinished = document.createElement('div');\r\n                const progressUnfinished = document.createElement('div');\r\n                progressFinished.classList.add('progress', 'progress-finished');\r\n                progressUnfinished.classList.add('progress', 'progress-not');\r\n                progressFinished.id = this.idCtx.FRAME_PROGRESS_FINISHED(frame);\r\n                progressUnfinished.id = this.idCtx.FRAME_PROGRESS_UNFINISHED(frame);\r\n                progress.append(progressFinished, progressUnfinished);\r\n                frameContainer.append(progress);\r\n                const frameButton = document.createElement('div');\r\n                frameButton.id = this.idCtx.TIMELINE_FRAME(frame);\r\n                frameButton.classList.add(`timeline__frame`, currentFrame === frame ? 'timeline__frame--selected' : 'timeline__frame--not-selected', `pointer`);\r\n                frameButton.innerText = String(frame);\r\n                frameContainer.append(frameButton);\r\n                timelineContainer.append(frameContainer);\r\n            }\r\n            addButtonToToolbar('Play', this.playing.get() ? 'bi bi-pause-fill' : 'bi bi-play-fill', this.ids.TOOLBAR_PLAY_BUTTON);\r\n            if (this.scene.config.displayTimeline) {\r\n                footerContainer.append(timelineContainer);\r\n            }\r\n        }\r\n        return footerContainer;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/Footer.ts?");

/***/ }),

/***/ "./src/component/Overlay.ts":
/*!**********************************!*\
  !*** ./src/component/Overlay.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Overlay\": () => (/* binding */ Overlay)\n/* harmony export */ });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/component/Component.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\nclass Overlay extends _Component__WEBPACK_IMPORTED_MODULE_0__.SceneComponent {\r\n    renderInIds() {\r\n        return [this.ids.ROOT_OVERLAY];\r\n    }\r\n    listen() {\r\n        return [this.overlayCtx.overlayOpenState, this.overlayCtx.overlayHTMLState];\r\n    }\r\n    afterRender() {\r\n        const overlay = document.getElementById(this.ids.OVERLAY);\r\n        if (overlay) {\r\n            overlay.onclick = (e) => {\r\n                if (e.target === overlay) {\r\n                    this.overlayCtx.close();\r\n                }\r\n            };\r\n            this.scene.$('.modal__header__close').on('click', () => {\r\n                this.overlayCtx.close();\r\n            });\r\n            this.overlayCtx.overlayAfterRender();\r\n        }\r\n    }\r\n    render() {\r\n        return this.overlayCtx.overlayOpen ? `<div class='overlay' id=\"${this.ids.OVERLAY}\">\r\n        ${this.overlayCtx.overlayHTML}\r\n        </div>` : '';\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/Overlay.ts?");

/***/ }),

/***/ "./src/component/PropDialog.ts":
/*!*************************************!*\
  !*** ./src/component/PropDialog.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PropDialog\": () => (/* binding */ PropDialog)\n/* harmony export */ });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/component/Component.ts\");\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/* harmony import */ var _props_Props__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../props/Props */ \"./src/props/Props.ts\");\n/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Utils */ \"./src/utils/Utils.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\n\r\n\r\n\r\nvar Tab;\r\n(function (Tab) {\r\n    Tab[Tab[\"IMAGES\"] = 0] = \"IMAGES\";\r\n    Tab[Tab[\"GENERAL\"] = 1] = \"GENERAL\";\r\n    Tab[Tab[\"STEPS\"] = 2] = \"STEPS\";\r\n    Tab[Tab[\"SCRIPTS\"] = 3] = \"SCRIPTS\";\r\n    Tab[Tab[\"DEBUG\"] = 4] = \"DEBUG\";\r\n})(Tab || (Tab = {}));\r\nclass PropDialog extends _Component__WEBPACK_IMPORTED_MODULE_0__.SceneComponent {\r\n    afterConstructor() {\r\n        this.selectedTabState = (0,_state_State__WEBPACK_IMPORTED_MODULE_1__.createState)(Tab.GENERAL);\r\n    }\r\n    listen() {\r\n        return [this.propCtx.selectedPropState, this.propCtx.propsState, this.selectedTabState];\r\n    }\r\n    renderInIds() {\r\n        return [this.ids.ROOT_PROP_DIALOG];\r\n    }\r\n    actions() {\r\n        return [[this.propCtx.selectedPropState, () => {\r\n                    this.selectedTabState.set(Tab.GENERAL);\r\n                }], [this.scene.propCtx.currentFrameState, (oldFrame, newFrame) => {\r\n                    const selectedProp = this.propCtx.selectedProp;\r\n                    if (selectedProp) {\r\n                        const positionElement = document.getElementById(this.idCtx.PROP_DIALOG_FOOTER_POSITION(selectedProp));\r\n                        const scaleElement = document.getElementById(this.idCtx.PROP_DIALOG_FOOTER_SCALE(selectedProp));\r\n                        this.updatePositionScaleElements(positionElement, scaleElement, selectedProp, newFrame, newFrame < oldFrame);\r\n                    }\r\n                }]];\r\n    }\r\n    updatePositionScaleElements(positionElement, scaleElement, prop, frame, lookForward) {\r\n        const position = frame == null ? this.propCtx.getPropPositionByCurrentFrame(prop) : this.propCtx.getPropPositionByFrame(prop, frame, lookForward);\r\n        const positionDisplay = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_3__.positionToDisplay)(position);\r\n        if (positionElement) {\r\n            positionElement.innerText = `(${positionDisplay.x}, ${positionDisplay.y}, ${positionDisplay.degree}°)`;\r\n            positionElement.style.color = prop.color;\r\n        }\r\n        if (scaleElement) {\r\n            scaleElement.innerText = `(${positionDisplay.scaleX}x, ${positionDisplay.scaleY}x)`;\r\n            scaleElement.style.color = prop.color;\r\n        }\r\n    }\r\n    afterRender() {\r\n        const toggle = (e) => {\r\n            const [id] = this.idCtx.extractIdType(e.target.id);\r\n            this.propCtx.toggleSelected(id);\r\n        };\r\n        this.scene.$('.prop__dialog__close').on(\"click\", (e) => {\r\n            toggle(e);\r\n        });\r\n        this.scene.$('.prop__dialog').on(\"click\", () => {\r\n            this.propCtx.clearSelectedProp();\r\n        });\r\n        this.scene.$('.prop__dialog--popup').on(\"click\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.scene.$('.header span').on(\"click\", (e) => {\r\n            this.selectedTabState.set(this.idCtx.extractIdType(e.target.id)[0]);\r\n        });\r\n        this.scene.$('.content .image__container img').on(\"click\", (e) => {\r\n            this.overlayCtx.openWith(`<img src='${e.target.getAttribute('src')}' alt=\"\"/>`);\r\n        });\r\n    }\r\n    render() {\r\n        const selectedProp = this.propCtx.selectedProp;\r\n        if (selectedProp) {\r\n            const isPopup = this.scene.config.dialog === 'popup';\r\n            const parentContainer = document.createElement('div');\r\n            if (isPopup) {\r\n                parentContainer.classList.add(\"prop__dialog\");\r\n            }\r\n            const dialogContainerElement = document.createElement('div');\r\n            dialogContainerElement.classList.add(`prop__dialog--${isPopup ? 'popup' : 'embedded'}`, this.scene.isRootMobile() ? 'prop__dialog--embedded--mobile' : 'prop__dialog--embedded--normal');\r\n            parentContainer.appendChild(dialogContainerElement);\r\n            const header = document.createElement('div');\r\n            header.classList.add('header');\r\n            const addTitleTab = (id, title, enableTab, ...classNames) => {\r\n                if (this.scene.config.alwaysShowAllDialogTabs || enableTab) {\r\n                    const button = document.createElement('span');\r\n                    const tooltip = document.createElement('span');\r\n                    tooltip.innerText = title;\r\n                    button.append(tooltip);\r\n                    button.classList.add(...classNames, 'tooltip', 'header__tab');\r\n                    button.id = this.idCtx.PROP_DIALOG_HEADER_TAB(id);\r\n                    button.classList.add(this.selectedTabState.get() === id ? \"header__button--selected\" : \"header__button--not-selected\");\r\n                    header.append(button);\r\n                }\r\n            };\r\n            addTitleTab(Tab.GENERAL, \"General Information\", true, \"bi\", \"bi-boxes\");\r\n            addTitleTab(Tab.SCRIPTS, \"Scripts\", selectedProp.script, \"bi\", \"bi-journal-bookmark-fill\");\r\n            addTitleTab(Tab.STEPS, \"Steps\", selectedProp.steps, \"bi\", \"bi-123\");\r\n            addTitleTab(Tab.IMAGES, \"Images\", selectedProp.images, \"bi\", \"bi-image-fill\");\r\n            addTitleTab(Tab.DEBUG, \"Debug Information\", this.scene.config.dialogShowAllProperties, \"bi\", \"bi-bug\");\r\n            const contentElement = document.createElement('div');\r\n            contentElement.classList.add(\"content\");\r\n            const createKeyValueContent = (key, value, displayFormat) => {\r\n                const parentElement = document.createElement('span');\r\n                const keyElement = document.createElement('span');\r\n                const valueElement = document.createElement('span');\r\n                keyElement.innerHTML = displayFormat ? `【${(0,_utils_Utils__WEBPACK_IMPORTED_MODULE_3__.camelToDisplay)(String(key))}】 ` : `【${String(key)}】 `;\r\n                keyElement.classList.add(\"content__key\");\r\n                valueElement.innerHTML = String(value);\r\n                valueElement.classList.add(\"content__value\");\r\n                parentElement.classList.add('content__key-value');\r\n                parentElement.append(keyElement, valueElement);\r\n                return parentElement;\r\n            };\r\n            const createImage = (imageConfig) => {\r\n                const containerElement = document.createElement('div');\r\n                containerElement.classList.add('image__container', 'bottom-gray-border');\r\n                const imageElement = document.createElement('img');\r\n                const titleElement = document.createElement('span');\r\n                titleElement.innerText = imageConfig.title ? imageConfig.title : '';\r\n                titleElement.classList.add(\"content-text--normal\");\r\n                containerElement.append(titleElement);\r\n                imageElement.src = imageConfig.imageURL;\r\n                containerElement.append(imageElement);\r\n                return containerElement;\r\n            };\r\n            const createStepCard = (stepNumber, stepConfig) => {\r\n                const containerElement = document.createElement('div');\r\n                containerElement.classList.add('step-card', 'bottom-gray-border');\r\n                const headerElement = document.createElement('div');\r\n                const stepNumberElement = document.createElement('span');\r\n                stepNumberElement.innerText = String(stepNumber);\r\n                stepNumberElement.classList.add('step-card__step');\r\n                const titleElement = document.createElement('span');\r\n                titleElement.innerText = stepConfig.title ? stepConfig.title : \"\";\r\n                titleElement.classList.add('content-text--normal');\r\n                headerElement.append(stepNumberElement, titleElement);\r\n                const contentElement = document.createElement('span');\r\n                contentElement.innerText = stepConfig.content ? stepConfig.content : \"\";\r\n                contentElement.classList.add('content-text--normal');\r\n                containerElement.append(headerElement, contentElement);\r\n                return containerElement;\r\n            };\r\n            switch (this.selectedTabState.get()) {\r\n                case Tab.GENERAL:\r\n                    for (let key in selectedProp) {\r\n                        if (!_props_Props__WEBPACK_IMPORTED_MODULE_2__.ExcludeKeys.includes(key) && !selectedProp.excludeKeys.includes(key)) {\r\n                            contentElement.append(createKeyValueContent(key, selectedProp[key]));\r\n                        }\r\n                    }\r\n                    if (selectedProp.note) {\r\n                        contentElement.append(createKeyValueContent(\"Note\", selectedProp.note));\r\n                    }\r\n                    break;\r\n                case Tab.SCRIPTS:\r\n                    if (selectedProp.script) {\r\n                        const scriptElement = document.createElement('span');\r\n                        scriptElement.innerText = selectedProp.script;\r\n                        scriptElement.classList.add('content-text--normal');\r\n                        contentElement.append(scriptElement);\r\n                    }\r\n                    break;\r\n                case Tab.IMAGES:\r\n                    if (selectedProp.images) {\r\n                        selectedProp.images.forEach(imageConfig => {\r\n                            contentElement.append(createImage(imageConfig));\r\n                        });\r\n                    }\r\n                    break;\r\n                case Tab.STEPS:\r\n                    if (selectedProp.steps) {\r\n                        Object.keys(selectedProp.steps).sort((a, b) => Number(a) - Number(b)).forEach(key => {\r\n                            contentElement.append(createStepCard(Number(key), selectedProp.steps[key]));\r\n                        });\r\n                    }\r\n                    break;\r\n                case Tab.DEBUG:\r\n                    switch (this.scene.config.dialogAllPropertiesFormat) {\r\n                        case \"flat\":\r\n                            const flat = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_3__.flatObject)(selectedProp);\r\n                            for (let key in flat) {\r\n                                contentElement.append(createKeyValueContent(key, flat[key], false));\r\n                            }\r\n                            break;\r\n                        case \"json\":\r\n                            const jsonElement = document.createElement('p');\r\n                            jsonElement.innerText = JSON.stringify(selectedProp, null, 2);\r\n                            jsonElement.classList.add('content-text--normal');\r\n                            contentElement.append(jsonElement);\r\n                            break;\r\n                    }\r\n                    break;\r\n            }\r\n            const footer = document.createElement('div');\r\n            footer.classList.add('footer');\r\n            const headerCloseIcon = document.createElement('i');\r\n            headerCloseIcon.id = this.idCtx.PROP_DIALOG_CLOSE_ICON(selectedProp);\r\n            headerCloseIcon.classList.add(\"bi\", \"bi-x\", \"pointer\", \"prop__dialog__close\");\r\n            header.appendChild(headerCloseIcon);\r\n            const propIcon = this.propCtx.getPropSVG(selectedProp);\r\n            propIcon.id = this.idCtx.PROP_DIALOG_FOOTER_ICON(selectedProp);\r\n            const propText = document.createElement(\"span\");\r\n            propText.innerText = selectedProp.name;\r\n            propText.style.color = selectedProp.color;\r\n            const positionText = document.createElement('span');\r\n            const scaleText = document.createElement('span');\r\n            this.updatePositionScaleElements(positionText, scaleText, selectedProp);\r\n            positionText.id = this.idCtx.PROP_DIALOG_FOOTER_POSITION(selectedProp);\r\n            scaleText.id = this.idCtx.PROP_DIALOG_FOOTER_SCALE(selectedProp);\r\n            footer.append(propIcon, propText, positionText, scaleText);\r\n            dialogContainerElement.append(header, contentElement, footer);\r\n            return parentContainer.outerHTML;\r\n            // appending the element will set svg's Viewbox to viewbox\r\n            // attributes are case-sensitive, that's why outerHTML's used\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/PropDialog.ts?");

/***/ }),

/***/ "./src/component/PropList.ts":
/*!***********************************!*\
  !*** ./src/component/PropList.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PropList\": () => (/* binding */ PropList)\n/* harmony export */ });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/component/Component.ts\");\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Utils */ \"./src/utils/Utils.ts\");\n/* harmony import */ var _FilterDialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FilterDialog */ \"./src/component/FilterDialog.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\n\r\n\r\n\r\nclass PropList extends _Component__WEBPACK_IMPORTED_MODULE_0__.SceneComponent {\r\n    afterConstructor() {\r\n        this.open = (0,_state_State__WEBPACK_IMPORTED_MODULE_1__.createState)(true);\r\n    }\r\n    listen() {\r\n        return [this.propCtx.propsState, this.propCtx.selectedPropTypesState,\r\n            this.propCtx.searchPropValueState];\r\n    }\r\n    actions() {\r\n        return [[this.open, (_, open) => {\r\n                    const container = this.scene.getRootDocument().querySelector('.prop__list-container');\r\n                    const icon = this.scene.getRootDocument().querySelector('.hide__icon-rotate-container');\r\n                    if (open) {\r\n                        container.classList.remove(\"prop__list-container--closed\");\r\n                        icon.classList.remove(\"icon-animated-right\");\r\n                        icon.classList.add(\"icon-animated-left\");\r\n                    }\r\n                    else {\r\n                        container.classList.add(\"prop__list-container--closed\");\r\n                        icon.classList.remove(\"icon-animated-left\");\r\n                        icon.classList.add(\"icon-animated-right\");\r\n                    }\r\n                }], [this.propCtx.selectedPropState, (_, selected) => {\r\n                    const listItemContainer = document.getElementById(this.idCtx.PROP_LIST(selected));\r\n                    this.propCtx.props.forEach(prop => {\r\n                        const listItemContainer = document.getElementById(this.idCtx.PROP_LIST(prop));\r\n                        if (listItemContainer) {\r\n                            listItemContainer.classList.add(\"prop__list__item--not-selected\");\r\n                            listItemContainer.classList.remove(\"prop__list__item--selected\");\r\n                            listItemContainer.querySelector(\"span\").style.color = prop.color;\r\n                            listItemContainer.querySelectorAll(\"path\").forEach(c => {\r\n                                c.style.fill = prop.color;\r\n                            });\r\n                        }\r\n                    });\r\n                    if (listItemContainer) {\r\n                        listItemContainer.classList.remove(\"prop__list__item--not-selected\");\r\n                        listItemContainer.classList.add(\"prop__list__item--selected\");\r\n                        listItemContainer.querySelector(\"span\").style.color = \"var(--scene-base)\";\r\n                        listItemContainer.querySelectorAll(\"path\").forEach(c => {\r\n                            c.style.fill = \"var(--scene-base)\";\r\n                        });\r\n                    }\r\n                }]];\r\n    }\r\n    renderInIds() {\r\n        return [this.ids.ROOT_PROP_LIST];\r\n    }\r\n    afterRender() {\r\n        let filterDialog;\r\n        this.open.set(this.scene.config.defaultOpenPropList);\r\n        this.scene.$('.prop__list__item').on(\"click\", (e) => {\r\n            const [id] = this.idCtx.extractIdType(e.currentTarget.id);\r\n            this.propCtx.toggleSelected(id);\r\n        });\r\n        this.scene.$('#' + this.ids.PROP_LIST_HIDE).on(\"click\", () => {\r\n            this.open.set(!this.open.get());\r\n        });\r\n        this.scene.$('#' + this.ids.PROP_LIST_DIALOG_BUTTON).on(\"click\", () => {\r\n            this.overlayCtx.openWith(``);\r\n            filterDialog = new _FilterDialog__WEBPACK_IMPORTED_MODULE_3__.FilterDialog(this.scene);\r\n            filterDialog.renderComponent();\r\n        });\r\n        this.scene.$('#' + this.ids.PROP_LIST_RESET_BUTTON).on(\"click\", () => {\r\n            console.log('reset');\r\n            if (filterDialog) {\r\n                filterDialog.unmount();\r\n            }\r\n            this.propCtx.resetFilter();\r\n        });\r\n    }\r\n    render() {\r\n        const propColumnContainer = document.createElement('div');\r\n        propColumnContainer.classList.add('prop__column');\r\n        const parentContainer = document.createElement('div');\r\n        parentContainer.classList.add('prop__list');\r\n        const createButton = (text, id, ...iconClasses) => {\r\n            const button = document.createElement('div');\r\n            button.classList.add('prop__list__bottom__button');\r\n            button.id = id;\r\n            const buttonText = document.createElement('span');\r\n            buttonText.innerText = text;\r\n            const icon = document.createElement('span');\r\n            icon.classList.add(...iconClasses);\r\n            button.append(buttonText, icon);\r\n            return button;\r\n        };\r\n        const dialogButton = createButton('Filter', this.ids.PROP_LIST_DIALOG_BUTTON, 'bi', 'bi-x');\r\n        const resetButton = createButton('Reset', this.ids.PROP_LIST_RESET_BUTTON, 'bi', 'bi-x');\r\n        const buttonGroup = document.createElement('div');\r\n        buttonGroup.classList.add('prop__list__bottom__container');\r\n        buttonGroup.append(dialogButton, resetButton);\r\n        propColumnContainer.append(buttonGroup);\r\n        propColumnContainer.append(parentContainer);\r\n        const hideIconContainer = document.createElement('div');\r\n        hideIconContainer.id = this.ids.PROP_LIST_HIDE;\r\n        const hideIconRotateContainer = document.createElement('div');\r\n        hideIconRotateContainer.classList.add(\"icon-animated-left\", \"hide__icon-rotate-container\");\r\n        const hideIcon = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createIconFontElement)(this.ids.PROP_LIST_HIDE_ICON, \"bi\", \"bi-arrow-bar-left\");\r\n        hideIconRotateContainer.append(hideIcon);\r\n        hideIconContainer.append(hideIconRotateContainer);\r\n        hideIconContainer.classList.add('hide__icon-container', 'pointer');\r\n        this.propCtx.filteredProps.forEach(prop => {\r\n            const isSelected = this.propCtx.isPropSelected(prop);\r\n            const color = isSelected ? \"var(--scene-base)\" : prop.color;\r\n            const listItemContainer = document.createElement('div');\r\n            listItemContainer.id = this.idCtx.PROP_LIST(prop);\r\n            listItemContainer.classList.add(\"pointer\", \"prop__list__item\", this.propCtx.isPropSelected(prop) ? \"prop__list__item--selected\" : \"prop__list__item--not-selected\");\r\n            const propIcon = this.propCtx.getPropSVG(prop, color, 1.3);\r\n            const propText = this.propCtx.getPropSpanText(prop, color);\r\n            listItemContainer.append(propIcon, propText);\r\n            parentContainer.append(listItemContainer);\r\n        });\r\n        return propColumnContainer.outerHTML + hideIconContainer.outerHTML;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/PropList.ts?");

/***/ }),

/***/ "./src/component/Snackbar.ts":
/*!***********************************!*\
  !*** ./src/component/Snackbar.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Snackbar\": () => (/* binding */ Snackbar)\n/* harmony export */ });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/component/Component.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\nclass Snackbar extends _Component__WEBPACK_IMPORTED_MODULE_0__.SceneComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.timeouts = [];\r\n    }\r\n    actions() {\r\n        return [[this.snackbarCtx.snackbarState, ((_, message) => {\r\n                    const snackbar = document.getElementById(this.ids.SNACKBAR);\r\n                    const span = snackbar.querySelector(\"span\");\r\n                    snackbar.classList.remove(\"snackbar--closed\");\r\n                    if (this.snackbarCtx.isError) {\r\n                        snackbar.classList.remove('snackbar--success');\r\n                        snackbar.classList.add('snackbar--error');\r\n                    }\r\n                    else {\r\n                        snackbar.classList.add('snackbar--success');\r\n                        snackbar.classList.remove('snackbar--error');\r\n                    }\r\n                    span.innerText = message;\r\n                    this.timeouts.forEach(t => {\r\n                        clearTimeout(t);\r\n                    });\r\n                    this.timeouts.push(setTimeout(() => {\r\n                        snackbar.classList.add(\"snackbar--closed\");\r\n                    }, 4000));\r\n                })]];\r\n    }\r\n    renderInIds() {\r\n        return [this.ids.ROOT_SNACKBAR];\r\n    }\r\n    afterRender() {\r\n    }\r\n    render() {\r\n        return `<div class='snackbar snackbar--closed ${this.scene.isRootMobile() ? 'snackbar--mobile' : 'snackbar--normal'} ${this.snackbarCtx.isError ? 'snackbar--error' : 'snackbar--success'}' id=\"${this.ids.SNACKBAR}\"><span></span></div>`;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/Snackbar.ts?");

/***/ }),

/***/ "./src/component/View.ts":
/*!*******************************!*\
  !*** ./src/component/View.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ View)\n/* harmony export */ });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/component/Component.ts\");\n\r\nclass View extends _Component__WEBPACK_IMPORTED_MODULE_0__.SceneComponent {\r\n    forEachPropWithPosition(f) {\r\n        this.propCtx.filteredProps.forEach(prop => {\r\n            const position = this.propCtx.getPropPositionByCurrentFrame(prop);\r\n            if (position) {\r\n                f(prop, position);\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/View.ts?");

/***/ }),

/***/ "./src/component/ViewCanvas.ts":
/*!*************************************!*\
  !*** ./src/component/ViewCanvas.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ViewCanvas\": () => (/* binding */ ViewCanvas)\n/* harmony export */ });\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View */ \"./src/component/View.ts\");\n\r\nclass ViewCanvas extends _View__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    afterRender() {\r\n    }\r\n    render() {\r\n        return `<canvas width=\"${Math.floor(this.scene.getRootWidth())}\" height=\"${Math.floor(this.scene.getRootHeight())}\"\r\n        id=\"${this.ids.CANVAS}\"></canvas>`;\r\n    }\r\n    resetViewport(currentFrame) {\r\n    }\r\n}\r\n// /*\r\n//  * Copyright 2022 Dan Lyu.\r\n//  */\r\n//\r\n// import {SceneComponent} from \"./Component\";\r\n// import {AnimationConfig, PositionConfig, PropConfig} from \"../props/Props\";\r\n// import State, {createState, StateAction} from \"../state/State\";\r\n// import PropTupleSet from \"../utils/PropTupleSet\";\r\n// import {extractPathD, forEachPathHTML, getLineGroup} from \"../utils/Utils\";\r\n// import View from \"./View\";\r\n//\r\n// export class ViewCanvas extends View {\r\n//\r\n//     // I can't find a way to add animation while re-rendering the entire content\r\n//     // This means:\r\n//     // view will be updated only when props config changed\r\n//     // the rest of state changes will dispatch actions that modify the DOM\r\n//\r\n//     connections: State<PropTupleSet>\r\n//\r\n//     afterConstructor() {\r\n//         this.connections = createState(new PropTupleSet())\r\n//     }\r\n//\r\n//     listen(): State<any>[] {\r\n//         return [this.ctx.propsState];\r\n//     }\r\n//\r\n//     actions(): StateAction<any>[] {\r\n//         return [\r\n//             [this.ctx.selectedState, (oldProp: PropConfig, newProp: PropConfig) => {\r\n//                 if (oldProp) {\r\n//                     const propDOM = $(`#${this.ctx.getId(oldProp, 'view', 'prop')}`)\r\n//                     if (propDOM) {\r\n//                         propDOM.removeClass(\"view__prop--selected\")\r\n//                     }\r\n//                 }\r\n//                 if (newProp) {\r\n//                     const propDOM = $(`#${this.ctx.getId(newProp, 'view', 'prop')}`)\r\n//                     if (propDOM) {\r\n//                         propDOM.removeClass(\"view__prop--not-selected\")\r\n//                         propDOM.addClass(\"view__prop--selected\")\r\n//                     }\r\n//                 }\r\n//             }],\r\n//             [this.ctx.timeCtx.currentFrameState, (oldFrame: number, newFrame: number) => {\r\n//                 console.log(`Frame: ${oldFrame} -> ${newFrame}`)\r\n//                 this.ctx.propsState.get().forEach(prop => {\r\n//                     let newPosition = prop.frameAnimationConfig[newFrame]\r\n//                     let show = newPosition && !newPosition.hide\r\n//                     newPosition = this.ctx.getPropPositionByFrame(prop, newFrame, newFrame < oldFrame)\r\n//                     //const previousPosition = this.context.getPropPositionByFrame(prop, oldFrame, newFrame - oldFrame < 0)\r\n//                     const groupElement = document.getElementById(this.ctx.getId(prop, 'view', 'prop'))\r\n//                     groupElement.style.display = show ? \"unset\" : \"none\"\r\n//                     const enabledGroup = document.getElementById(this.ctx.getId(prop, 'view', 'prop', 'icon', 'group', 'enabled'))\r\n//                     const disabledGroup = document.getElementById(this.ctx.getId(prop, 'view', 'prop', 'icon', 'group', 'disabled'))\r\n//                     if (!newPosition.enabled) {\r\n//                         enabledGroup.style.opacity = \"0\"\r\n//                         disabledGroup.style.opacity = \"1\"\r\n//                     } else {\r\n//                         disabledGroup.style.opacity = \"0\"\r\n//                         enabledGroup.style.opacity = \"1\"\r\n//                     }\r\n//                     // console.log(`${previousPosition.x},${previousPosition.y} => ${newPosition.x},${newPosition.y}`)\r\n//                     groupElement.setAttribute(\"transform\", `translate(${newPosition.x}, ${newPosition.y}) rotate(${newPosition.degree}) scale(${newPosition.scaleX} ${newPosition.scaleY})`)\r\n//                     let transitionDuration\r\n//                     if (newFrame - oldFrame === 1 || (newFrame === 1 && oldFrame === this.ctx.timeCtx.totalFrames)) {\r\n//                         transitionDuration = this.ctx.getFrameSeconds(oldFrame) + \"s\"\r\n//                     } else {\r\n//                         transitionDuration = this.ctx.config.frameSelectionSpeed + \"s\"\r\n//                     }\r\n//                     enabledGroup.style.transitionDuration = transitionDuration\r\n//                     disabledGroup.style.transitionDuration = transitionDuration\r\n//                     groupElement.style.transitionDuration = transitionDuration\r\n//                 })\r\n//\r\n//             }]]\r\n//     }\r\n//\r\n//     renderIn() {\r\n//         return [this.getRootId(\"view\")]\r\n//     }\r\n//\r\n//     public resetViewport(currentFrame?: number) {\r\n//     }\r\n//\r\n//     afterRender() {\r\n//         const canvas = document.getElementById(this.ctx.getIdType('canvas')) as HTMLCanvasElement\r\n//         const ctx = canvas.getContext('2d')\r\n//         canvas.style.width = Math.floor(this.ctx.getRootWidth())+ \"px\";\r\n//         canvas.style.height = Math.floor(this.ctx.getRootHeight()) + \"px\";\r\n//         const scale = window.devicePixelRatio; // <--- Change to 1 on retina screens to see blurry canvas.\r\n//         canvas.width = Math.floor(this.ctx.getRootWidth()) * scale;\r\n//         canvas.height = Math.floor(this.ctx.getRootHeight()) * scale;\r\n//         console.log(scale)\r\n//         const applyContext = (prop, position) => {\r\n//             ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n//             ctx.fillStyle = prop.color\r\n//             ctx.scale(scale+position.scaleX, scale+position.scaleY)\r\n//         }\r\n//         this.forEachPropWithPosition((prop, position) => {\r\n//             applyContext(prop, position)\r\n//             ctx.lineWidth = 0.5\r\n//             ctx.font = '12px Comfortaa'\r\n//             const name = prop.name\r\n//             const textRect = ctx.measureText(name)\r\n//             ctx.translate(textRect.width, textRect.actualBoundingBoxAscent + textRect.actualBoundingBoxDescent)\r\n//             ctx.rotate(position.degree * Math.PI / 180)\r\n//             ctx.fillText(prop.name, position.x, position.y)\r\n//             forEachPathHTML(this.ctx.propTypeIconPool[prop.type][prop.style]['disabledPaths'], (pathHTML)=>{\r\n//                 applyContext(prop, position)\r\n//                 const path = extractPathD(pathHTML)\r\n//                 let p = new Path2D(path)\r\n//                 ctx.translate(position.x, position.y + 10)\r\n//                 ctx.fill(p)\r\n//             })\r\n//\r\n//         })\r\n//     }\r\n//\r\n//     render(): string | string[] {\r\n//\r\n//         return `<canvas width=\"${Math.floor(this.ctx.getRootWidth())}\" height=\"${Math.floor(this.ctx.getRootHeight())}\"\r\n// id=\"${this.ctx.getIdType('canvas')}\"></canvas>`\r\n//     }\r\n// }\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/ViewCanvas.ts?");

/***/ }),

/***/ "./src/component/ViewSVG.ts":
/*!**********************************!*\
  !*** ./src/component/ViewSVG.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ViewSVG\": () => (/* binding */ ViewSVG)\n/* harmony export */ });\n/* harmony import */ var _props_Props__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../props/Props */ \"./src/props/Props.ts\");\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/* harmony import */ var _utils_PropTupleSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/PropTupleSet */ \"./src/utils/PropTupleSet.ts\");\n/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Utils */ \"./src/utils/Utils.ts\");\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./View */ \"./src/component/View.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\n\r\n\r\n\r\n\r\nclass ViewSVG extends _View__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\r\n    afterConstructor() {\r\n        this.connections = (0,_state_State__WEBPACK_IMPORTED_MODULE_1__.createState)(new _utils_PropTupleSet__WEBPACK_IMPORTED_MODULE_2__[\"default\"]());\r\n    }\r\n    listen() {\r\n        return [this.propCtx.propsState, this.propCtx.selectedPropTypesState,\r\n            this.propCtx.searchPropValueState];\r\n    }\r\n    actions() {\r\n        return [\r\n            [this.propCtx.selectedPropState, (oldProp, newProp) => {\r\n                    if (oldProp) {\r\n                        const propDOM = $(`#${this.idCtx.VIEW_PROP(oldProp)}`);\r\n                        if (propDOM) {\r\n                            propDOM.removeClass(\"view__prop--selected\");\r\n                        }\r\n                    }\r\n                    if (newProp) {\r\n                        const propDOM = $(`#${this.idCtx.VIEW_PROP(newProp)}`);\r\n                        if (propDOM) {\r\n                            propDOM.removeClass(\"view__prop--not-selected\");\r\n                            propDOM.addClass(\"view__prop--selected\");\r\n                        }\r\n                    }\r\n                }],\r\n            [this.propCtx.currentFrameState, (oldFrame, newFrame) => {\r\n                    this.propCtx.filteredProps.forEach(prop => {\r\n                        let newPosition = prop.frameAnimationConfig[newFrame];\r\n                        let show = newPosition && !newPosition.hide;\r\n                        newPosition = this.propCtx.getPropPositionByFrame(prop, newFrame, newFrame < oldFrame);\r\n                        const groupElement = document.getElementById(this.idCtx.VIEW_PROP(prop));\r\n                        groupElement.style.display = show ? \"unset\" : \"none\";\r\n                        const enabledGroup = document.getElementById(this.idCtx.VIEW_ICON_PATH_GROUP_ENABLED(prop));\r\n                        const disabledGroup = document.getElementById(this.idCtx.VIEW_ICON_PATH_GROUP_DISABLED(prop));\r\n                        const storyboard = groupElement.querySelector('image');\r\n                        if (enabledGroup) {\r\n                            enabledGroup.style.opacity = !newPosition.enabled ? \"0\" : \"1\";\r\n                        }\r\n                        if (disabledGroup) {\r\n                            disabledGroup.style.opacity = !newPosition.enabled ? \"1\" : \"0\";\r\n                        }\r\n                        if (storyboard) {\r\n                            if (newPosition.thumbnail) {\r\n                                if (newPosition.thumbnail.height) {\r\n                                    storyboard.setAttributeNS(null, 'height', String(newPosition.thumbnail.height));\r\n                                }\r\n                                if (newPosition.thumbnail.width) {\r\n                                    storyboard.setAttributeNS(null, 'width', String(newPosition.thumbnail.width));\r\n                                }\r\n                            }\r\n                        }\r\n                        groupElement.setAttribute(\"transform\", `translate(${newPosition.x}, ${newPosition.y}) rotate(${newPosition.degree}) scale(${newPosition.scaleX} ${newPosition.scaleY})`);\r\n                        let transitionDuration;\r\n                        if (this.propCtx.ifJumpOne(oldFrame, newFrame)) {\r\n                            transitionDuration = this.scene.getFrameSeconds(oldFrame) + \"s\";\r\n                        }\r\n                        else {\r\n                            transitionDuration = this.scene.config.frameSelectionSpeed + \"s\";\r\n                        }\r\n                        (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_3__.setStyles)('transitionDuration', transitionDuration, enabledGroup, disabledGroup, groupElement, storyboard);\r\n                        const oldPosition = this.propCtx.getPropPositionByFrame(prop, oldFrame, false);\r\n                        if (oldPosition) {\r\n                            (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_3__.setStyles)('transitionTimingFunction', oldPosition.transitionTimingFunction, enabledGroup, disabledGroup, groupElement, storyboard);\r\n                        }\r\n                    });\r\n                }]\r\n        ];\r\n    }\r\n    renderInIds() {\r\n        return [this.ids.ROOT_VIEW];\r\n    }\r\n    applyViewportAttrs(viewBoxChange) {\r\n        const svgE = this.scene.$(`.view-svg`);\r\n        svgE.attr(\"viewBox\", `${-this.getViewportCtx().x} ${-this.getViewportCtx().y} ${svgE.width() * this.getViewportCtx().scale} ${svgE.height() * this.getViewportCtx().scale}`);\r\n        if (!viewBoxChange) {\r\n            this.scene.$(`.view__prop`).each((index, element) => {\r\n                const prop = this.propCtx.getPropById(this.idCtx.extractIdType(element.id)[0]);\r\n                if (prop.shouldDisplayName) {\r\n                    const position = this.propCtx.getPropPositionByCurrentFrame(prop);\r\n                    const textElement = element.querySelector('text');\r\n                    const pathGroup = document.getElementById(this.idCtx.VIEW_ICON_PATH_GROUP(prop, position.enabled ? 'enabled' : 'disabled'));\r\n                    const storyboard = element.querySelector('image');\r\n                    if (textElement) {\r\n                        const textWidth = textElement.getBBox().width;\r\n                        const textHeight = textElement.getBBox().height;\r\n                        const elementBBox = storyboard ? storyboard.getBBox() : pathGroup.getBBox();\r\n                        let shiftXVertical = elementBBox.width / 2 - textWidth / 2;\r\n                        let shiftYHorizontal = elementBBox.height / 2 + textHeight / 2;\r\n                        // console.log(`Path: ${elementBBox.width} | Text: ${textWidth} | Shift: ${shiftYHorizontal}`)\r\n                        let shiftX, shiftY;\r\n                        switch (prop.namePosition) {\r\n                            case \"top\":\r\n                                shiftY = -7;\r\n                                shiftX = shiftXVertical;\r\n                                break;\r\n                            case \"bottom\":\r\n                                shiftY = elementBBox.height + textHeight + 7;\r\n                                shiftX = shiftXVertical;\r\n                                break;\r\n                            case \"left\":\r\n                                shiftY = shiftYHorizontal;\r\n                                shiftX = Math.floor(-textWidth - elementBBox.width);\r\n                                break;\r\n                            case \"right\":\r\n                                shiftY = shiftYHorizontal;\r\n                                shiftX = Math.floor(elementBBox.width + 7);\r\n                                break;\r\n                            case \"center\":\r\n                                shiftY = shiftYHorizontal;\r\n                                shiftX = shiftXVertical;\r\n                                break;\r\n                        }\r\n                        textElement.setAttribute(\"y\", String(prop.nameYOffset + shiftY));\r\n                        textElement.setAttribute(\"x\", String(prop.nameXOffset + shiftX));\r\n                        textElement.setAttribute(\"transform\", `scale(${prop.nameScale} ${prop.nameScale})`);\r\n                    }\r\n                    else {\r\n                        switch (prop.type) {\r\n                            case _props_Props__WEBPACK_IMPORTED_MODULE_0__.PropType.STORYBOARD:\r\n                                //textElement.setAttribute(\"y\", String(textHeight))\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    resetViewport(currentFrame) {\r\n        this.getViewportCtx().resetViewport(currentFrame);\r\n        this.applyViewportAttrs();\r\n    }\r\n    afterRender() {\r\n        this.mouse = { x: 0, y: 0 };\r\n        this.dragging = false;\r\n        this.resetViewport();\r\n        const stopDragging = (e) => {\r\n            if (this.dragging) {\r\n                e.preventDefault();\r\n                this.dragging = false;\r\n                $('#' + this.ids.ROOT_VIEW).css('cursor', 'unset');\r\n            }\r\n        };\r\n        const getMouseOffset = (e) => {\r\n            const c = $('#' + this.ids.ROOT_VIEW);\r\n            const interactX = e.touches == null ? e.clientX : e.touches[0].pageX;\r\n            const interactY = e.touches == null ? e.clientY : e.touches[0].pageY;\r\n            return { x: interactX - c[0].getBoundingClientRect().left, y: interactY - c[0].getBoundingClientRect().top };\r\n        };\r\n        $('#' + this.ids.ROOT_VIEW).on(\"mousedown touchstart\", (e) => {\r\n            e.preventDefault();\r\n            this.dragging = true;\r\n            const c = $('#' + this.ids.ROOT_VIEW);\r\n            this.mouse = getMouseOffset(e);\r\n            c.css('cursor', 'grabbing');\r\n        }).on(\"mousemove touchmove\", (e) => {\r\n            e.preventDefault();\r\n            if (this.dragging) {\r\n                const previous = this.getViewportCtx().offset;\r\n                const previousMouse = Object.assign({}, this.mouse);\r\n                const currMouse = getMouseOffset(e);\r\n                this.mouse = currMouse;\r\n                this.getViewportCtx().offset = {\r\n                    x: previous.x + currMouse.x - previousMouse.x,\r\n                    y: previous.y + currMouse.y - previousMouse.y,\r\n                };\r\n                this.applyViewportAttrs(true);\r\n            }\r\n        }).on(\"mouseup mouseleave touchend touchcancel\", (e) => {\r\n            stopDragging(e);\r\n        }).on('wheel', (e) => {\r\n            e.preventDefault();\r\n            const deltaY = e.originalEvent.deltaY;\r\n            if (deltaY > 0) { // zoom in\r\n                this.getViewportCtx().zoomIn();\r\n            }\r\n            else { // zoom out\r\n                this.getViewportCtx().zoomOut();\r\n            }\r\n            this.applyViewportAttrs(true);\r\n        });\r\n        this.scene.$('.view__prop').on('click touchend', (e) => {\r\n            const elementId = e.target.id ? e.target.id : e.target.parentElement.id;\r\n            let [id] = this.idCtx.extractIdType(elementId);\r\n            this.propCtx.toggleSelected(id);\r\n        });\r\n    }\r\n    createConnections() {\r\n        let connections = [...this.connections.get()].map(_c => {\r\n            const c = _c.split(\",\").map(s => Number(s));\r\n            const propLeft = this.propCtx.getPropById(c[0]);\r\n            const propRight = this.propCtx.getPropById(c[1]);\r\n            const leftGroupElement = document.getElementById(this.idCtx.VIEW_GROUP(propLeft));\r\n            const rightGroupElement = document.getElementById(this.idCtx.VIEW_GROUP(propRight));\r\n            const propLeftPosition = this.propCtx.getPropPositionByCurrentFrame(propLeft);\r\n            const propRightPosition = this.propCtx.getPropPositionByCurrentFrame(propRight);\r\n            const propLeftRect = leftGroupElement.querySelector(\"text\").getBoundingClientRect();\r\n            const propRightRect = rightGroupElement.querySelector(\"text\").getBoundingClientRect();\r\n            // console.log(\"bounding: \" + propLeftPosition.x + \",\" + propLeftPosition.y)\r\n            // console.log(this.ctx.getPropPositionByCurrentFrame(propLeft))\r\n            return `<g stroke-width=\"1\" stroke=\"red\"><path d=\"M${propLeftPosition.x + propLeftRect.width / 2} ${propLeftPosition.y + propLeftRect.height / 2} L${propRightPosition.x + propRightRect.width / 2} ${propRightPosition.y + propRightRect.height / 2}\"/></g>\r\n<g class=\"view__prop__connection\"><path d=\"M${propLeftPosition.x} ${propLeftPosition.y} L${propRightPosition.x} ${propRightPosition.y}\"/></g>`;\r\n        });\r\n        document.getElementById(this.ids.VIEW_CONNECTIONS).innerHTML = connections.join('');\r\n    }\r\n    render() {\r\n        const gs = [];\r\n        this.scene.config.lines.forEach(([start, end, line]) => {\r\n            gs.push((0,_utils_Utils__WEBPACK_IMPORTED_MODULE_3__.getLineGroup)(start.x, start.y, end.x, end.y, line.width, line.color));\r\n        });\r\n        let s = [];\r\n        this.forEachPropWithPosition((prop, position) => {\r\n            var _a;\r\n            const hide = position.hide;\r\n            if (position) {\r\n                const isSelected = this.propCtx.isPropSelected(prop);\r\n                const group = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n                group.classList.add(\"view__prop\", isSelected ? 'view__prop--selected' : 'view__prop--not-selected');\r\n                group.style.transitionTimingFunction = position.transitionTimingFunction;\r\n                group.id = this.idCtx.VIEW_GROUP(prop);\r\n                group.setAttribute(\"transform\", `translate(${position.x}, ${position.y}) rotate(${position.degree}) scale(${position.scaleX} ${position.scaleY})`);\r\n                switch (prop.type) {\r\n                    case _props_Props__WEBPACK_IMPORTED_MODULE_0__.PropType.STORYBOARD:\r\n                        if (position.thumbnail) {\r\n                            const img = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n                            if (position.thumbnail.width == null && position.thumbnail.height == null) {\r\n                                position.thumbnail.width = 50;\r\n                            }\r\n                            if (position.thumbnail.height) {\r\n                                img.setAttributeNS(null, 'height', String(position.thumbnail.height));\r\n                            }\r\n                            if (position.thumbnail.width) {\r\n                                img.setAttributeNS(null, 'width', String(position.thumbnail.width));\r\n                            }\r\n                            img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', position.thumbnail.imageURL);\r\n                            img.setAttributeNS(null, 'x', String(position.x));\r\n                            img.setAttributeNS(null, 'y', String(position.y));\r\n                            group.append(img);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const pathGroupEnabled = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_3__.getPathGroupByHTML)(this.propCtx.propTypePool[prop.type][prop.style]['enabledPaths'], prop);\r\n                        const pathGroupDisabled = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_3__.getPathGroupByHTML)(this.propCtx.propTypePool[prop.type][prop.style]['disabledPaths'], prop);\r\n                        pathGroupEnabled.id = this.idCtx.VIEW_ICON_PATH_GROUP_ENABLED(prop);\r\n                        pathGroupDisabled.id = this.idCtx.VIEW_ICON_PATH_GROUP_DISABLED(prop);\r\n                        if (this.propCtx.isPropEnabled(prop)) {\r\n                            pathGroupDisabled.style.opacity = \"0\";\r\n                        }\r\n                        else {\r\n                            pathGroupEnabled.style.opacity = \"0\";\r\n                        }\r\n                        group.append(pathGroupEnabled, pathGroupDisabled);\r\n                }\r\n                if (prop.shouldDisplayName) {\r\n                    const text = document.createElement(\"text\");\r\n                    text.id = this.idCtx.VIEW_PROP_TEXT(prop);\r\n                    text.innerText = prop.name;\r\n                    text.style.fill = (_a = prop.nameColor) !== null && _a !== void 0 ? _a : prop.color;\r\n                    group.appendChild(text);\r\n                }\r\n                if (hide) {\r\n                    group.style.display = \"none\";\r\n                }\r\n                //path.id = this.context.getId(prop, 'view', 'prop', 'icon')\r\n                s.push(group.outerHTML);\r\n            }\r\n        });\r\n        for (let key in this.scene.config.attachment) {\r\n            const keyProps = this.propCtx.getPropsByName(key);\r\n            let valueProps = [];\r\n            this.scene.config.attachment[key].forEach(name => {\r\n                valueProps = valueProps.concat(this.propCtx.getPropsByName(name));\r\n            });\r\n            keyProps.forEach(keyProp => {\r\n                valueProps.forEach(valueProp => {\r\n                    if (keyProp !== valueProp) {\r\n                        this.connections.get().addIdTuple([keyProp.id, valueProp.id]);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return `<svg class=\"view-svg\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"${this.ids.VIEW_CONNECTIONS}\"></g>${s.join('')}\r\n<g id=\"${this.ids.VIEW_LINES_GROUP}\">${gs.join('')}</g></svg>`;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/component/ViewSVG.ts?");

/***/ }),

/***/ "./src/config/Config.ts":
/*!******************************!*\
  !*** ./src/config/Config.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultConfig\": () => (/* binding */ DefaultConfig)\n/* harmony export */ });\nconst DefaultConfig = {\r\n    defaultTheme: \"dark\",\r\n    themeScope: 'container',\r\n    dialog: \"embedded\",\r\n    viewOffset: 0.2,\r\n    transitionTimingFunction: \"linear\",\r\n    frameSpeed: {},\r\n    attachment: {},\r\n    defaultFrameSpeed: 1,\r\n    frameSelectionSpeed: 1,\r\n    defaultOpenPropList: true,\r\n    defaultOpenToolbar: true,\r\n    propTypes: {},\r\n    lines: [],\r\n    alwaysShowAllDialogTabs: false,\r\n    props: [],\r\n    renderMethod: \"canvas\",\r\n    zoomLowerBound: 0.15,\r\n    zoomUpperBound: 2,\r\n    zoomFactor: 1.02,\r\n    dialogShowAllProperties: false,\r\n    dialogAllPropertiesFormat: 'json',\r\n    customThemes: {},\r\n    displayToolbar: true,\r\n    displayPropList: true,\r\n    displayTimeline: true,\r\n};\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/config/Config.ts?");

/***/ }),

/***/ "./src/context/Context.ts":
/*!********************************!*\
  !*** ./src/context/Context.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Context)\n/* harmony export */ });\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\nclass Context {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.themeCtx = scene.themeCtx;\r\n        this.config = scene.config;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/context/Context.ts?");

/***/ }),

/***/ "./src/context/IdContext.ts":
/*!**********************************!*\
  !*** ./src/context/IdContext.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IdContext\": () => (/* binding */ IdContext),\n/* harmony export */   \"IdTypes\": () => (/* binding */ IdTypes),\n/* harmony export */   \"useId\": () => (/* binding */ useId)\n/* harmony export */ });\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\nconst IdTypes = {\r\n    ROOT_SNACKBAR: ['snackbar', 'root__container'],\r\n    ROOT_PROP_LIST: ['prop__list', 'root__container'],\r\n    ROOT_PROP_DIALOG: ['prop__property', 'root__container'],\r\n    ROOT_VIEW: ['view', 'root__container'],\r\n    ROOT_FOOTER: ['footer', 'root__container'],\r\n    ROOT_OVERLAY: ['overlay', 'root__container'],\r\n    VIEW_ICON_PATH_GROUP: ['view', 'prop', 'icon', 'group'],\r\n    VIEW_ICON_PATH_GROUP_ENABLED: ['view', 'prop', 'icon', 'group', 'enabled'],\r\n    VIEW_ICON_PATH_GROUP_DISABLED: ['view', 'prop', 'icon', 'group', 'disabled'],\r\n    VIEW_PROP_TEXT: ['view', 'prop', 'text'],\r\n    VIEW_GROUP: ['view', 'prop'],\r\n    VIEW_CONNECTIONS: ['view', 'connections'],\r\n    VIEW_LINES_GROUP: ['view', 'lines', 'group'],\r\n    VIEW_PROP: ['view', 'prop'],\r\n    OVERLAY: ['overlay'],\r\n    FRAME_PROGRESS_FINISHED: ['frame', 'progress', 'finished'],\r\n    FRAME_PROGRESS_UNFINISHED: ['frame', 'progress', 'unfinished'],\r\n    TIMELINE_FRAME: ['timeline', 'frame'],\r\n    TOOLBAR: ['toolbar'],\r\n    TOOLBAR_PLAY_BUTTON: [\"toolbar\", \"play\"],\r\n    TOOLBAR_FULLSCREEN: ['toolbar', 'fullscreen'],\r\n    TOOLBAR_COLLAPSE_BUTTON: [\"toolbar\", \"collapse\"],\r\n    TOOLBAR_RESET_CURRENT_BUTTON: [\"toolbar\", \"reset\", \"current\"],\r\n    TOOLBAR_RESET_FRAMES_BUTTON: [\"toolbar\", \"reset\", \"frames\"],\r\n    TOOLBAR_EXPORT_BUTTON: [\"toolbar\", \"export\"],\r\n    TOOLBAR_THEME_BUTTON: [\"toolbar\", \"theme\"],\r\n    PROP_DIALOG_CLOSE_ICON: ['prop', 'dialog', 'property'],\r\n    PROP_DIALOG_FOOTER_ICON: ['prop', 'dialog', 'property', 'icon'],\r\n    PROP_DIALOG_FOOTER_POSITION: ['prop', 'dialog', 'footer', 'position'],\r\n    PROP_DIALOG_FOOTER_SCALE: ['prop', 'dialog', 'footer', 'scale'],\r\n    PROP_DIALOG_HEADER_TAB: ['dialog'],\r\n    PROP_LIST: ['prop', 'list'],\r\n    PROP_LIST_HIDE: ['prop', 'list', 'hide'],\r\n    PROP_LIST_RESET_BUTTON: ['prop', 'list', 'reset'],\r\n    PROP_LIST_DIALOG_BUTTON: ['prop', 'list', 'open', 'dialog'],\r\n    PROP_LIST_HIDE_ICON: ['prop', 'list', 'hide', 'icon'],\r\n    SNACKBAR: ['snackbar'],\r\n    CANVAS: ['canvas'],\r\n    PROP_TYPE_TOGGLE: ['prop', 'type', 'toggle'],\r\n    PROP_SEARCH_INPUT: ['prop', 'search', 'input'],\r\n    PROP_FILTERED_LIST: ['prop', 'filtered', 'list']\r\n};\r\n// I added context id to every id since id attributes are supposed to be unique\r\n// (i.e.,) unique ids across different instances in the same page\r\n// I don't know if there's a better way to achieve this\r\n// ISSUE with JS proxy in TS:\r\n// https://github.com/microsoft/TypeScript/issues/20846\r\nfunction useId() {\r\n    const idContext = new IdContext();\r\n    const idTypesProxy = new Proxy(IdTypes, {\r\n        get(target, prop, receiver) {\r\n            var _a;\r\n            if (Reflect.has(target, prop)) {\r\n                const returnValue = typeof prop === 'string' ? (_a = IdTypes[prop]) !== null && _a !== void 0 ? _a : Reflect.get(target, prop, receiver) : Reflect.get(target, prop, receiver);\r\n                if (Array.isArray(returnValue)) {\r\n                    return idContext.getId(null, ...returnValue);\r\n                }\r\n                return returnValue;\r\n            }\r\n            return null;\r\n        }\r\n    });\r\n    return [idTypesProxy, idContext];\r\n}\r\nclass IdContext {\r\n    constructor() {\r\n        this.contextId = IdContext.contextIds;\r\n        IdContext.contextIds += 1;\r\n        for (let key in IdTypes) {\r\n            this[key] = (id, ...extra) => this.getId(id, ...extra, ...IdTypes[key]);\r\n        }\r\n    }\r\n    getType(...type) {\r\n        return this.getId(null, ...type);\r\n    }\r\n    getId(id, ...type) {\r\n        type.sort((a, b) => a.localeCompare(b));\r\n        const _id = id == null ? \"\" : (typeof id === 'number' ? \"-\" + id : (id.id === null || undefined) ? \"\" : \"-\" + id.id);\r\n        return `${this.contextId}-${type.join('-')}${_id}`;\r\n    }\r\n    extractIdType(htmlID, ...exclude) {\r\n        const elementId = htmlID.match(/-\\d+/);\r\n        const contextId = htmlID.match(/\\d+-/);\r\n        if (!contextId || parseInt(contextId[0].replace('-', '')) != this.contextId) {\r\n            return [-1, []];\r\n        }\r\n        let id = -1;\r\n        if (elementId) {\r\n            id = parseInt(elementId[0].replace('-', ''));\r\n        }\r\n        const type = htmlID.replace(/-\\d+/, '').replace(/\\d+-/, '');\r\n        return [id, type.split('-').filter(t => !exclude.includes(t))];\r\n    }\r\n}\r\nIdContext.contextIds = 0;\r\n// const [ids, idContext] = useId()\r\n// console.log(ids.ROOT_SNACKBAR, idContext.ROOT_SNACKBAR(2, \"test\"))\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/context/IdContext.ts?");

/***/ }),

/***/ "./src/context/OverlayContext.ts":
/*!***************************************!*\
  !*** ./src/context/OverlayContext.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ OverlayContext),\n/* harmony export */   \"useOverlay\": () => (/* binding */ useOverlay)\n/* harmony export */ });\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\nfunction useOverlay() {\r\n    return new OverlayContext();\r\n}\r\nclass OverlayContext {\r\n    constructor() {\r\n        this.overlayOpenState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)(false);\r\n        this.overlayHTMLState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)('');\r\n        this.overlayAfterRender = () => { };\r\n    }\r\n    get overlayHTML() {\r\n        return this.overlayHTMLState.get();\r\n    }\r\n    get overlayOpen() {\r\n        return this.overlayOpenState.get();\r\n    }\r\n    close() {\r\n        this.overlayOpenState.set(false);\r\n    }\r\n    openWith(content, afterRender = () => { }) {\r\n        this.overlayAfterRender = afterRender;\r\n        this.overlayOpenState.set(true);\r\n        this.overlayHTMLState.set(content);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/context/OverlayContext.ts?");

/***/ }),

/***/ "./src/context/PropContext.ts":
/*!************************************!*\
  !*** ./src/context/PropContext.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PropContext)\n/* harmony export */ });\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/* harmony import */ var _props_Props__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../props/Props */ \"./src/props/Props.ts\");\n/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Utils */ \"./src/utils/Utils.ts\");\n/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Context */ \"./src/context/Context.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\n\r\n\r\n\r\nclass PropContext extends _Context__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.currentFrameState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)(1);\r\n        this.totalFramesState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)(0);\r\n        this.selectedPropState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)();\r\n        this.propsState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)([]);\r\n        this.propIds = 0;\r\n        this.selectedPropTypesState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)([]);\r\n        this.searchPropValueState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)('');\r\n        this.propTypePool = Object.assign({}, _props_Props__WEBPACK_IMPORTED_MODULE_1__.PropTypeIcons);\r\n    }\r\n    get searchValue() {\r\n        return this.searchPropValueState.get();\r\n    }\r\n    set searchValue(value) {\r\n        this.searchPropValueState.set(value);\r\n    }\r\n    toggleSelectedPropType(type) {\r\n        if (this.isPropTypeSelected(type)) {\r\n            this.selectedPropTypesState.set(this.selectedPropTypes.filter(t => t !== type));\r\n        }\r\n        else {\r\n            this.selectedPropTypesState.set([...this.selectedPropTypes, type]);\r\n        }\r\n    }\r\n    isPropTypeSelected(type) {\r\n        return this.selectedPropTypes.includes(type.toUpperCase());\r\n    }\r\n    resetFilter() {\r\n        this.selectedPropTypesState.set(this.allPropTypes);\r\n        this.searchValue = '';\r\n    }\r\n    get allPropTypes() {\r\n        return Object.keys(this.propTypePool);\r\n    }\r\n    get selectedPropTypes() {\r\n        return this.selectedPropTypesState.get();\r\n    }\r\n    clearSelectedProp() {\r\n        this.selectedPropState.set(null);\r\n    }\r\n    get props() {\r\n        return this.propsState.get();\r\n    }\r\n    get filteredProps() {\r\n        return this.props.filter(prop => {\r\n            return this.selectedPropTypes.includes(prop.type) && (this.searchValue ? prop.name.toLowerCase().includes(this.searchValue.toLowerCase()) : true);\r\n        });\r\n    }\r\n    addPropType(propTypes) {\r\n        this.propTypePool = Object.assign(Object.assign({}, this.propTypePool), propTypes);\r\n    }\r\n    sortPropsByRenderOrder() {\r\n        this.propsState.set(this.propsState.get().sort((a, b) => {\r\n            if (a.orderIndex < b.orderIndex) {\r\n                return -1;\r\n            }\r\n            if (a.orderIndex > b.orderIndex) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }));\r\n    }\r\n    isPropEnabled(prop) {\r\n        return this.getPropPositionByCurrentFrame(prop).enabled;\r\n    }\r\n    getPropPositionByCurrentFrame(prop) {\r\n        return this.getPropPositionByFrame(prop, this.currentFrame, false);\r\n    }\r\n    getPropById(id) {\r\n        for (const prop of this.propsState.get()) {\r\n            if (prop.id === id) {\r\n                return prop;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getPropsByName(name) {\r\n        const props = [];\r\n        for (const prop of this.propsState.get()) {\r\n            if (prop.name.toLowerCase() === name.toLowerCase()) {\r\n                props.push(prop);\r\n            }\r\n        }\r\n        return props;\r\n    }\r\n    addProp(...propConfigs) {\r\n        const _props = [...this.propsState.get()];\r\n        propConfigs.forEach(propConfig => {\r\n            var _a, _b, _c;\r\n            propConfig = Object.assign(Object.assign({}, _props_Props__WEBPACK_IMPORTED_MODULE_1__.DefaultPropConfig), propConfig);\r\n            propConfig.color = (_a = propConfig.color) !== null && _a !== void 0 ? _a : (this.themeCtx.currentTheme.isLight ? (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.generateDarkColor)() : (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.generateLightColor)());\r\n            propConfig.id = (_b = propConfig.id) !== null && _b !== void 0 ? _b : this.propIds;\r\n            propConfig.name = (_c = propConfig.name) !== null && _c !== void 0 ? _c : `${(0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.convertTypeToReadable)(propConfig.type)} ${propConfig.id}`;\r\n            if (propConfig.frameAnimationConfig) {\r\n                propConfig.frameAnimationConfig;\r\n                for (let key in propConfig.frameAnimationConfig) {\r\n                    const a = Object.assign(Object.assign({}, _props_Props__WEBPACK_IMPORTED_MODULE_1__.DefaultAnimationConfig), propConfig.frameAnimationConfig[key]);\r\n                    a.transitionTimingFunction = a.transitionTimingFunction || this.config.transitionTimingFunction;\r\n                    propConfig.frameAnimationConfig[key] = a;\r\n                }\r\n            }\r\n            this.propIds += 1;\r\n            _props.push(propConfig);\r\n        });\r\n        this.propsState.set(_props);\r\n        return this;\r\n    }\r\n    findMaxFrames() {\r\n        let max = 0;\r\n        this.propsState.get().forEach(prop => {\r\n            const frameConfig = prop.frameAnimationConfig;\r\n            const _max = Number(Object.keys(frameConfig).reduce((a, b) => frameConfig[a] > frameConfig[b] ? a : b));\r\n            if (_max > max) {\r\n                max = _max;\r\n            }\r\n        });\r\n        return max;\r\n    }\r\n    toggleSelected(prop) {\r\n        let _prop;\r\n        if (typeof prop == \"number\") {\r\n            _prop = this.getPropById(prop);\r\n        }\r\n        else {\r\n            _prop = prop;\r\n        }\r\n        if (_prop === this.selectedProp) {\r\n            this.clearSelectedProp();\r\n        }\r\n        else {\r\n            this.selectedProp = _prop;\r\n        }\r\n    }\r\n    getPropPositionByFrame(prop, frame, lookForward) {\r\n        var _a;\r\n        const _get = (_lookForward) => {\r\n            let position;\r\n            const frameConfig = prop.frameAnimationConfig;\r\n            if (frameConfig) {\r\n                if (frameConfig[frame]) {\r\n                    position = frameConfig[frame];\r\n                }\r\n                else {\r\n                    let closest = -1;\r\n                    for (let key in frameConfig) {\r\n                        const _key = Number(key);\r\n                        if (_lookForward) {\r\n                            if (_key > frame && (closest === -1 || Math.abs(_key - frame) < closest)) {\r\n                                closest = _key;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_key < frame && (closest === -1 || Math.abs(_key - frame) < closest)) {\r\n                                closest = _key;\r\n                            }\r\n                        }\r\n                    }\r\n                    position = frameConfig[closest];\r\n                }\r\n            }\r\n            return position;\r\n        };\r\n        const position = (_a = _get(lookForward)) !== null && _a !== void 0 ? _a : _get(!lookForward);\r\n        if (position) {\r\n            return Object.assign({}, position);\r\n        }\r\n        return null;\r\n    }\r\n    isPropSelected(prop) {\r\n        const selectedProp = this.selectedProp;\r\n        const propId = typeof prop === 'number' ? prop : prop.id;\r\n        return selectedProp && selectedProp.id === propId;\r\n    }\r\n    get selectedProp() {\r\n        return this.selectedPropState.get();\r\n    }\r\n    set selectedProp(selected) {\r\n        this.selectedPropState.set(selected);\r\n    }\r\n    getPropSpanText(prop, color) {\r\n        return (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createSpan)(prop.name, color ? color : prop.color);\r\n    }\r\n    getPropSVG(propOrType, color, scale) {\r\n        scale = scale ? scale : 1.4;\r\n        const propIcon = this.getPathGroup(propOrType, color);\r\n        if (propIcon) {\r\n            const svg = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createSVGIcon)(scale);\r\n            svg.append(propIcon);\r\n            return svg;\r\n        }\r\n        return document.createElement('div');\r\n    }\r\n    getPathGroup(propOrType, color) {\r\n        const isType = typeof propOrType === 'string';\r\n        const type = isType ? propOrType : propOrType.type;\r\n        const style = isType ? 'default' : propOrType.style;\r\n        const pathType = isType ? 'enabledPaths' : this.isPropEnabled(propOrType) ? 'enabledPaths' : 'disabledPaths';\r\n        const icon = this.propTypePool[type][style] ? this.propTypePool[type][style][pathType] : null;\r\n        if (icon) {\r\n            return (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.getPathGroupByHTML)(icon, isType ? null : propOrType, color);\r\n        }\r\n        return null;\r\n    }\r\n    get isStatic() {\r\n        return this.totalFrames <= 1;\r\n    }\r\n    get totalFrames() {\r\n        return this.totalFramesState.get();\r\n    }\r\n    set totalFrames(f) {\r\n        this.totalFramesState.set(f);\r\n    }\r\n    get currentFrame() {\r\n        return this.currentFrameState.get();\r\n    }\r\n    set currentFrame(f) {\r\n        this.currentFrameState.set(f);\r\n    }\r\n    ifJumpOne(oldFrame, newFrame) {\r\n        return newFrame - oldFrame === 1 || (newFrame === 1 && oldFrame === this.totalFrames);\r\n    }\r\n    ifJumpOneLiterally(oldFrame, newFrame) {\r\n        return newFrame - oldFrame === 1;\r\n    }\r\n    nextFrame() {\r\n        const previousFrame = this.currentFrame;\r\n        if (this.currentFrame < this.totalFrames) {\r\n            this.currentFrame++;\r\n        }\r\n        else if (this.currentFrame === this.totalFrames) {\r\n            this.currentFrame = 1;\r\n        }\r\n        return previousFrame;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/context/PropContext.ts?");

/***/ }),

/***/ "./src/context/SnackbarContext.ts":
/*!****************************************!*\
  !*** ./src/context/SnackbarContext.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SnackbarContext),\n/* harmony export */   \"useSnackbar\": () => (/* binding */ useSnackbar)\n/* harmony export */ });\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\nfunction useSnackbar() {\r\n    return new SnackbarContext();\r\n}\r\nclass SnackbarContext {\r\n    constructor() {\r\n        this.snackbarMessageState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)('');\r\n        this.error = false;\r\n    }\r\n    get isError() {\r\n        return this.error;\r\n    }\r\n    get snackbarState() {\r\n        return this.snackbarMessageState;\r\n    }\r\n    snackbar(message, isError = false) {\r\n        this.error = isError;\r\n        this.snackbarMessageState.set(message, true);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/context/SnackbarContext.ts?");

/***/ }),

/***/ "./src/context/ThemeContext.ts":
/*!*************************************!*\
  !*** ./src/context/ThemeContext.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ThemeConstants\": () => (/* binding */ ThemeConstants),\n/* harmony export */   \"default\": () => (/* binding */ ThemeContext),\n/* harmony export */   \"useTheme\": () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\nconst ThemeConstants = {\r\n    'light': {\r\n        isLight: true,\r\n        colors: {\r\n            \"--scene-base\": \"#ffffff\",\r\n            \"--scene-base-s1\": \"#F5F5F5\",\r\n            \"--scene-base-inv\": \"#000000\",\r\n            \"--scene-base-inv-s1\": \"#1c1c1c\",\r\n            \"--scene-base-inv-s2\": \"#696969\",\r\n            \"--scene-dialog-header-button-not-selected-hover\": \"#6565a1\",\r\n            \"--scene-dialog-header-button-not-selected-text-hover\": \"#6565a1\",\r\n            \"--scene-snackbar-error\": \"#EB7777\",\r\n            \"--scene-snackbar-success\": \"#49655E\",\r\n            \"--scene-timeline-button-selected\": \"#8688BC\",\r\n            \"--scene-timeline-button-selected-hover\": \"#6565a1\",\r\n            \"--scene-timeline-button-not-selected\": \"#EB7777\",\r\n            \"--scene-timeline-button-not-selected-hover\": \"#d96262\",\r\n            \"--scene-timeline-button-text\": \"#ffffff\",\r\n            \"--scene-snackbar-text\": \"#ffffff\",\r\n            \"--scene-dialog-key\": \"#6565a1\",\r\n            \"--scene-dialog-value\": \"#EB7777\",\r\n            \"--scene-dialog-content\": \"#000000\",\r\n            \"--scene-button-text\": \"#ffffff\",\r\n            \"--scene-button-color\": \"#8688BC\",\r\n            \"--scene-button-hover\": \"#6565a1\",\r\n            \"--scene-trans-base\": \"rgba(255, 255, 255, 0.92)\",\r\n        },\r\n        icon: 'bi bi-brightness-high'\r\n    },\r\n    'dark': {\r\n        isLight: false,\r\n        colors: {\r\n            \"--scene-base\": \"#000000\",\r\n            \"--scene-base-s1\": \"#2c2c2c\",\r\n            \"--scene-base-inv\": \"#ffffff\",\r\n            \"--scene-base-inv-s1\": \"#efefef\",\r\n            \"--scene-base-inv-s2\": \"#b4b4b4\",\r\n            \"--scene-dialog-header-button-not-selected-hover\": \"#a3a3c7\",\r\n            \"--scene-dialog-header-button-not-selected-text-hover\": \"#a3a3c7\",\r\n            \"--scene-snackbar-error\": \"#EB7777\",\r\n            \"--scene-snackbar-success\": \"#49655E\",\r\n            \"--scene-timeline-button-selected\": \"#8688BC\",\r\n            \"--scene-timeline-button-selected-hover\": \"#6565a1\",\r\n            \"--scene-timeline-button-not-selected\": \"#EB7777\",\r\n            \"--scene-timeline-button-not-selected-hover\": \"#d96262\",\r\n            \"--scene-timeline-button-text\": \"#ffffff\",\r\n            \"--scene-snackbar-text\": \"#ffffff\",\r\n            \"--scene-dialog-key\": \"#a3a3c7\",\r\n            \"--scene-dialog-value\": \"#ea9090\",\r\n            \"--scene-dialog-content\": \"#ffffff\",\r\n            \"--scene-button-text\": \"#ffffff\",\r\n            \"--scene-button-color\": \"#8688BC\",\r\n            \"--scene-button-hover\": \"#6565a1\",\r\n            \"--scene-trans-base\": \"rgba(40,40,40,0.92)\",\r\n        },\r\n        icon: 'bi bi-moon-stars-fill'\r\n    },\r\n    'dark-classic': {\r\n        isLight: false,\r\n        colors: {\r\n            \"--scene-base\": \"#000000\",\r\n            \"--scene-base-s1\": \"#2c2c2c\",\r\n            \"--scene-base-inv\": \"#ffffff\",\r\n            \"--scene-base-inv-s1\": \"#efefef\",\r\n            \"--scene-base-inv-s2\": \"#b4b4b4\",\r\n            \"--scene-dialog-header-button-not-selected-hover\": \"#9ab999\",\r\n            \"--scene-dialog-header-button-not-selected-text-hover\": \"#9ab999\",\r\n            \"--scene-snackbar-error\": \"#EB7777\",\r\n            \"--scene-snackbar-success\": \"#49655E\",\r\n            \"--scene-timeline-button-selected\": \"#375d7e\",\r\n            \"--scene-timeline-button-selected-hover\": \"#513c66\",\r\n            \"--scene-timeline-button-not-selected\": \"#6d5c7c\",\r\n            \"--scene-timeline-button-not-selected-hover\": \"#c06d85\",\r\n            \"--scene-timeline-button-text\": \"#ffffff\",\r\n            \"--scene-snackbar-text\": \"#ffffff\",\r\n            \"--scene-dialog-key\": \"#4c87b5\",\r\n            \"--scene-dialog-value\": \"#ff6a79\",\r\n            \"--scene-dialog-content\": \"#ffffff\",\r\n            \"--scene-button-text\": \"#ffffff\",\r\n            \"--scene-button-color\": \"#46aea9\",\r\n            \"--scene-button-hover\": \"#557a81\",\r\n            \"--scene-trans-base\": \"rgba(40,40,40,0.92)\",\r\n        },\r\n        icon: 'bi bi-balloon-heart-fill'\r\n    }\r\n};\r\nfunction useTheme(context, themes, defaultTheme) {\r\n    return new ThemeContext(context, themes, defaultTheme);\r\n}\r\nclass ThemeContext {\r\n    constructor(context, themes, defaultTheme) {\r\n        this._context = context;\r\n        this._themeKeys = [...Object.keys(themes)];\r\n        this._themes = themes;\r\n        let defaultPos = 0;\r\n        if (defaultTheme) {\r\n            defaultTheme = defaultTheme.toLowerCase();\r\n            if (this._themeKeys.includes(defaultTheme)) {\r\n                defaultPos = this._themeKeys.indexOf(defaultTheme);\r\n            }\r\n        }\r\n        this._current = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)(defaultPos);\r\n        this.renderTheme();\r\n    }\r\n    get currentState() {\r\n        return this._current;\r\n    }\r\n    get currentTheme() {\r\n        return this._themes[this._themeKeys[this._current.get()]];\r\n    }\r\n    get nextTheme() {\r\n        return this.getThemeByIndex(this.nextThemeIndex);\r\n    }\r\n    renderTheme() {\r\n        const colors = this.currentTheme.colors;\r\n        const container = this._context.config.themeScope === 'root'\r\n            ? document.documentElement : this._context.getRootDocument();\r\n        for (let key in colors) {\r\n            container.style.setProperty(key, colors[key]);\r\n        }\r\n    }\r\n    getThemeByIndex(index) {\r\n        return this._themes[this.getThemeName(index)];\r\n    }\r\n    getThemeName(index) {\r\n        return this._themeKeys[index];\r\n    }\r\n    getNextThemeIndex(index) {\r\n        let next = index + 1;\r\n        if (next >= this._themeKeys.length) {\r\n            next = 0;\r\n        }\r\n        return next;\r\n    }\r\n    get themeToDisplay() {\r\n        return `${this.getThemeName(this._current.get())} -> ${this.getThemeName(this.nextThemeIndex)}`;\r\n    }\r\n    get nextThemeIndex() {\r\n        return this.getNextThemeIndex(this._current.get());\r\n    }\r\n    next() {\r\n        this._current.set(this.nextThemeIndex);\r\n        this.renderTheme();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/context/ThemeContext.ts?");

/***/ }),

/***/ "./src/context/ViewPortContext.ts":
/*!****************************************!*\
  !*** ./src/context/ViewPortContext.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ViewPortContext)\n/* harmony export */ });\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../state/State */ \"./src/state/State.ts\");\n/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Context */ \"./src/context/Context.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\n\r\nclass ViewPortContext extends _Context__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\r\n    constructor(scene) {\r\n        super(scene);\r\n        this.offsetState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)({\r\n            x: 0, y: 0\r\n        });\r\n        this.scaleState = (0,_state_State__WEBPACK_IMPORTED_MODULE_0__.createState)(0.75);\r\n    }\r\n    findMinMaxPosition(currentFrame) {\r\n        let [minX, minY, maxX, maxY] = [null, null, null, null];\r\n        const updateMinMax = (position) => {\r\n            if (position.x > maxX || maxX == null) {\r\n                maxX = position.x;\r\n            }\r\n            if (position.y > maxY || maxY == null) {\r\n                maxY = position.y;\r\n            }\r\n            if (position.x < minX || minX == null) {\r\n                minX = position.x;\r\n            }\r\n            if (position.y < minY || minY == null) {\r\n                minY = position.y;\r\n            }\r\n        };\r\n        this.scene.propCtx.props.forEach(prop => {\r\n            if (currentFrame) {\r\n                updateMinMax(this.scene.propCtx.getPropPositionByCurrentFrame(prop));\r\n            }\r\n            else {\r\n                for (let key in prop.frameAnimationConfig) {\r\n                    const position = prop.frameAnimationConfig[key];\r\n                    if (position) {\r\n                        updateMinMax(position);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return [minX, minY, maxX, maxY];\r\n    }\r\n    calcViewBox([minX, minY, maxX, maxY]) {\r\n        const svgE = $(`${this.scene.rootContainerIdSymbol}`);\r\n        const viewWidthRatio = (maxX - minX) / svgE.width();\r\n        const viewHeightRatio = (maxY - minY) / svgE.height();\r\n        let viewRatio = viewWidthRatio > viewHeightRatio ? viewWidthRatio : viewHeightRatio;\r\n        viewRatio += this.config.viewOffset;\r\n        const viewX = minX - (this.config.viewOffset / 2) * svgE.width();\r\n        const viewY = minY - (this.config.viewOffset / 2) * svgE.height();\r\n        return [viewRatio, viewX, viewY];\r\n    }\r\n    resetViewport(currentFrame) {\r\n        const [viewRatio, viewX, viewY] = this.calcViewBox(this.findMinMaxPosition(currentFrame));\r\n        this.scale = viewRatio;\r\n        this.offset = {\r\n            x: -viewX, y: -viewY\r\n        };\r\n    }\r\n    get offset() {\r\n        return this.offsetState.get();\r\n    }\r\n    set offset(offset) {\r\n        this.offsetState.set(offset);\r\n    }\r\n    get scale() {\r\n        return this.scaleState.get();\r\n    }\r\n    set scale(scale) {\r\n        if (scale > this.config.zoomLowerBound && scale < this.config.zoomUpperBound) {\r\n            this.scaleState.set(scale);\r\n        }\r\n    }\r\n    get x() {\r\n        return this.offset.x;\r\n    }\r\n    get y() {\r\n        return this.offset.y;\r\n    }\r\n    zoomIn() {\r\n        this.scale = this.scale * this.config.zoomFactor;\r\n    }\r\n    zoomOut() {\r\n        this.scale = this.scale * (1 / this.config.zoomFactor);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/context/ViewPortContext.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultAnimationConfig\": () => (/* reexport safe */ _props_Props__WEBPACK_IMPORTED_MODULE_0__.DefaultAnimationConfig),\n/* harmony export */   \"DefaultLine\": () => (/* reexport safe */ _props_Props__WEBPACK_IMPORTED_MODULE_0__.DefaultLine),\n/* harmony export */   \"DefaultPropConfig\": () => (/* reexport safe */ _props_Props__WEBPACK_IMPORTED_MODULE_0__.DefaultPropConfig),\n/* harmony export */   \"ExcludeKeys\": () => (/* reexport safe */ _props_Props__WEBPACK_IMPORTED_MODULE_0__.ExcludeKeys),\n/* harmony export */   \"PropType\": () => (/* reexport safe */ _props_Props__WEBPACK_IMPORTED_MODULE_0__.PropType),\n/* harmony export */   \"PropTypeIcons\": () => (/* reexport safe */ _props_Props__WEBPACK_IMPORTED_MODULE_0__.PropTypeIcons),\n/* harmony export */   \"Scene\": () => (/* binding */ Scene),\n/* harmony export */   \"camelToDisplay\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.camelToDisplay),\n/* harmony export */   \"convertTypeToReadable\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.convertTypeToReadable),\n/* harmony export */   \"createDialog\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createDialog),\n/* harmony export */   \"createElement\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createElement),\n/* harmony export */   \"createIconFontElement\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createIconFontElement),\n/* harmony export */   \"createSVGElement\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createSVGElement),\n/* harmony export */   \"createSVGIcon\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createSVGIcon),\n/* harmony export */   \"createSpan\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.createSpan),\n/* harmony export */   \"demo\": () => (/* binding */ demo),\n/* harmony export */   \"extractPathD\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.extractPathD),\n/* harmony export */   \"flatObject\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.flatObject),\n/* harmony export */   \"forEachPathHTML\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.forEachPathHTML),\n/* harmony export */   \"generateDarkColor\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.generateDarkColor),\n/* harmony export */   \"generateLightColor\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.generateLightColor),\n/* harmony export */   \"getLineGroup\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.getLineGroup),\n/* harmony export */   \"getPathGroupByHTML\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.getPathGroupByHTML),\n/* harmony export */   \"getRandomFromList\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.getRandomFromList),\n/* harmony export */   \"positionToDisplay\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.positionToDisplay),\n/* harmony export */   \"randBoolean\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randBoolean),\n/* harmony export */   \"randInclusive\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randInclusive),\n/* harmony export */   \"setClassList\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.setClassList),\n/* harmony export */   \"setStyles\": () => (/* reexport safe */ _utils_Utils__WEBPACK_IMPORTED_MODULE_2__.setStyles)\n/* harmony export */ });\n/* harmony import */ var _props_Props__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./props/Props */ \"./src/props/Props.ts\");\n/* harmony import */ var _state_State__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state/State */ \"./src/state/State.ts\");\n/* harmony import */ var _utils_Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Utils */ \"./src/utils/Utils.ts\");\n/* harmony import */ var _component_PropDialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./component/PropDialog */ \"./src/component/PropDialog.ts\");\n/* harmony import */ var _component_Footer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./component/Footer */ \"./src/component/Footer.ts\");\n/* harmony import */ var _component_ViewSVG__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./component/ViewSVG */ \"./src/component/ViewSVG.ts\");\n/* harmony import */ var _config_Config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./config/Config */ \"./src/config/Config.ts\");\n/* harmony import */ var _component_Snackbar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./component/Snackbar */ \"./src/component/Snackbar.ts\");\n/* harmony import */ var _component_Overlay__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./component/Overlay */ \"./src/component/Overlay.ts\");\n/* harmony import */ var _context_PropContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./context/PropContext */ \"./src/context/PropContext.ts\");\n/* harmony import */ var _context_ViewPortContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./context/ViewPortContext */ \"./src/context/ViewPortContext.ts\");\n/* harmony import */ var _context_SnackbarContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./context/SnackbarContext */ \"./src/context/SnackbarContext.ts\");\n/* harmony import */ var _context_OverlayContext__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./context/OverlayContext */ \"./src/context/OverlayContext.ts\");\n/* harmony import */ var _component_ViewCanvas__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./component/ViewCanvas */ \"./src/component/ViewCanvas.ts\");\n/* harmony import */ var _context_IdContext__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./context/IdContext */ \"./src/context/IdContext.ts\");\n/* harmony import */ var _component_PropList__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./component/PropList */ \"./src/component/PropList.ts\");\n/* harmony import */ var _context_ThemeContext__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./context/ThemeContext */ \"./src/context/ThemeContext.ts\");\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet globalSceneIds = 0;\r\nconst globalScenes = {};\r\nclass Scene {\r\n    constructor(rootContainerId, config) {\r\n        this.viewportsState = (0,_state_State__WEBPACK_IMPORTED_MODULE_1__.createState)([]);\r\n        this.snackbarCtx = (0,_context_SnackbarContext__WEBPACK_IMPORTED_MODULE_11__.useSnackbar)();\r\n        this.overlayCtx = (0,_context_OverlayContext__WEBPACK_IMPORTED_MODULE_12__.useOverlay)();\r\n        [this.ids, this.idContext] = (0,_context_IdContext__WEBPACK_IMPORTED_MODULE_14__.useId)();\r\n        this.rootContainerId = rootContainerId;\r\n        this.rootContainerIdSymbol = '#' + this.rootContainerId;\r\n        this.config = config ? Object.assign(Object.assign({}, _config_Config__WEBPACK_IMPORTED_MODULE_6__.DefaultConfig), config) : Object.assign({}, _config_Config__WEBPACK_IMPORTED_MODULE_6__.DefaultConfig);\r\n        this.config.lines.forEach((l) => {\r\n            l[2] = Object.assign(Object.assign({}, _props_Props__WEBPACK_IMPORTED_MODULE_0__.DefaultLine), l[2]);\r\n        });\r\n        console.log(this.config);\r\n        this.themeCtx = (0,_context_ThemeContext__WEBPACK_IMPORTED_MODULE_16__.useTheme)(this, Object.assign(Object.assign({}, _context_ThemeContext__WEBPACK_IMPORTED_MODULE_16__.ThemeConstants), this.config.customThemes), this.config.defaultTheme);\r\n        this.propCtx = new _context_PropContext__WEBPACK_IMPORTED_MODULE_9__[\"default\"](this);\r\n        this.propCtx.addPropType(config.propTypes);\r\n        this.config.props.forEach(propConfig => {\r\n            this.propCtx.addProp(propConfig);\r\n        });\r\n    }\r\n    getRootDocument() {\r\n        return document.getElementById(this.rootContainerId);\r\n    }\r\n    getRootWidth() {\r\n        return this.getRootDocument().getBoundingClientRect().width;\r\n    }\r\n    getRootHeight() {\r\n        return this.getRootDocument().getBoundingClientRect().height;\r\n    }\r\n    isRootMobile() {\r\n        return this.getRootWidth() < 500;\r\n    }\r\n    getFrameSeconds(frame) {\r\n        return frame in this.config.frameSpeed ? this.config.frameSpeed[frame] : this.config.defaultFrameSpeed;\r\n    }\r\n    getViewportGetter() {\r\n        return () => {\r\n            return this.viewportsState.get()[0];\r\n        };\r\n    }\r\n    beforeDisplay() {\r\n        this.propCtx.totalFrames = this.propCtx.findMaxFrames();\r\n        const viewports = [];\r\n        for (let i = 0; i <= this.propCtx.totalFrames; i++) {\r\n            // populate one more frame since 0's used for static/animation\r\n            const viewport = new _context_ViewPortContext__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this);\r\n            viewports.push(viewport);\r\n        }\r\n        this.viewportsState.set(viewports);\r\n        this.propCtx.sortPropsByRenderOrder();\r\n        this.propCtx.resetFilter();\r\n    }\r\n    register(...c) {\r\n        const components = [];\r\n        c.forEach(cl => {\r\n            const component = new cl(this);\r\n            component.renderComponent();\r\n            components.push(component);\r\n        });\r\n        return components;\r\n    }\r\n    $(selector) {\r\n        return $(`${this.rootContainerIdSymbol} ${selector}`);\r\n    }\r\n    display() {\r\n        this.beforeDisplay();\r\n        $(() => {\r\n            $(`${this.rootContainerIdSymbol}`).addClass(\"root-container\")\r\n                .html(`<div id=\"${this.ids.ROOT_SNACKBAR}\" class='snackbar-container'></div>\r\n                                     <div id=\"${this.ids.ROOT_PROP_LIST}\" class='prop__list-container'></div>\r\n                                    <div id=\"${this.ids.ROOT_PROP_DIALOG}\" class='prop__property-container'></div>\r\n                                    <div id=\"${this.ids.ROOT_VIEW}\" class='view-container'></div>\r\n                                    <div id=\"${this.ids.ROOT_FOOTER}\" class=\"footer-container\"></div>\r\n                                    <div id=\"${this.ids.ROOT_OVERLAY}\" class=\"overlay-container\"></div>`);\r\n            const v = this.config.renderMethod === 'canvas' ? _component_ViewCanvas__WEBPACK_IMPORTED_MODULE_13__.ViewCanvas : _component_ViewSVG__WEBPACK_IMPORTED_MODULE_5__.ViewSVG;\r\n            const [view] = this.register(v, _component_PropDialog__WEBPACK_IMPORTED_MODULE_3__.PropDialog, _component_Footer__WEBPACK_IMPORTED_MODULE_4__.Footer, _component_Snackbar__WEBPACK_IMPORTED_MODULE_7__.Snackbar, _component_Overlay__WEBPACK_IMPORTED_MODULE_8__.Overlay);\r\n            if (this.config.displayPropList) {\r\n                this.register(_component_PropList__WEBPACK_IMPORTED_MODULE_15__.PropList);\r\n            }\r\n            this.viewComponent = view;\r\n        });\r\n    }\r\n}\r\nfunction demo(rootRootId) {\r\n    let randomNamePosition = false;\r\n    let randomNameScale = false;\r\n    const sImages = [\r\n        {\r\n            title: \"test\",\r\n            imageURL: \"https://s2.loli.net/2022/02/10/grldkO4LeDjxmY8.png\"\r\n        },\r\n        {\r\n            imageURL: \"https://s2.loli.net/2022/03/16/KZw7yAWXudMGL21.png\"\r\n        },\r\n        {\r\n            title: \"A long picture\",\r\n            imageURL: \"https://s2.loli.net/2022/03/16/tukpnVKZaUC7GIF.png\"\r\n        }\r\n    ];\r\n    const getSharedProp = () => {\r\n        const s = {};\r\n        if ((0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randBoolean)()) {\r\n            s['note'] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\r\n        }\r\n        if ((0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randBoolean)()) {\r\n            s['scripts'] = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\n123\\n\\na: c\";\r\n        }\r\n        if ((0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randBoolean)()) {\r\n            s['images'] = sImages;\r\n        }\r\n        if ((0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randBoolean)()) {\r\n            s['steps'] =\r\n                {\r\n                    3: {\r\n                        title: \"Here's step 1\",\r\n                        content: \"Here's some content\"\r\n                    },\r\n                    2: {\r\n                        title: \"Here's step 2\",\r\n                        content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\"\r\n                    },\r\n                    4: {\r\n                        content: \"aha\"\r\n                    },\r\n                    5: { title: \"A title\" },\r\n                    1: {},\r\n                    6: {},\r\n                    7: {}\r\n                };\r\n        }\r\n        return s;\r\n    };\r\n    const sharedConfig = {\r\n        defaultTheme: 'light',\r\n        customThemes: {\r\n            \"light-custom\": {\r\n                icon: \"bi bi-arrow-through-heart-fill\",\r\n                isLight: true,\r\n                colors: {\r\n                    \"--scene-base\": \"#ffffff\",\r\n                    \"--scene-base-s1\": \"#F5F5F5\",\r\n                    \"--scene-base-inv\": \"#000000\",\r\n                    \"--scene-base-inv-s1\": \"#1c1c1c\",\r\n                    \"--scene-base-inv-s2\": \"#696969\",\r\n                    \"--scene-dialog-header-button-not-selected-hover\": \"#355070\",\r\n                    \"--scene-dialog-header-button-not-selected-text-hover\": \"#355070\",\r\n                    \"--scene-snackbar\": \"#F765A3\",\r\n                    \"--scene-timeline-button-selected\": \"#6d597a\",\r\n                    \"--scene-timeline-button-selected-hover\": \"#6d597a\",\r\n                    \"--scene-timeline-button-not-selected\": \"#F765A3\",\r\n                    \"--scene-timeline-button-not-selected-hover\": \"#ea5490\",\r\n                    \"--scene-timeline-button-text\": \"#ffffff\",\r\n                    \"--scene-snackbar-text\": \"#ffffff\",\r\n                    \"--scene-dialog-key\": \"#6d597a\",\r\n                    \"--scene-dialog-value\": \"#A155B9\",\r\n                    \"--scene-dialog-content\": \"#000000\",\r\n                    \"--scene-button-text\": \"#ffffff\",\r\n                    \"--scene-button-color\": \"#7ec4ef\",\r\n                    \"--scene-button-hover\": \"#9cabde\",\r\n                    \"--scene-trans-base\": \"rgba(255, 255, 255, 0.95)\",\r\n                },\r\n            }\r\n        },\r\n        propTypes: {\r\n            \"HOUSE\": {\r\n                default: {\r\n                    enabledPaths: `<path d=\"M11.251.068a.5.5 0 0 1 .227.58L9.677 6.5H13a.5.5 0 0 1 .364.843l-8 8.5a.5.5 0 0 1-.842-.49L6.323 9.5H3a.5.5 0 0 1-.364-.843l8-8.5a.5.5 0 0 1 .615-.09zM4.157 8.5H7a.5.5 0 0 1 .478.647L6.11 13.59l5.732-6.09H9a.5.5 0 0 1-.478-.647L9.89 2.41 4.157 8.5z\"/>`,\r\n                    disabledPaths: `<path d=\"M11.251.068a.5.5 0 0 1 .227.58L9.677 6.5H13a.5.5 0 0 1 .364.843l-8 8.5a.5.5 0 0 1-.842-.49L6.323 9.5H3a.5.5 0 0 1-.364-.843l8-8.5a.5.5 0 0 1 .615-.09z\"/>`\r\n                }\r\n            }\r\n        },\r\n        renderMethod: 'svg',\r\n    };\r\n    const getDemoLight = () => {\r\n        return {\r\n            type: _props_Props__WEBPACK_IMPORTED_MODULE_0__.PropType.LIGHT,\r\n            colorTemperature: 5000,\r\n            lightType: \"hard\",\r\n            frameAnimationConfig: {\r\n                1: {\r\n                    x: 140, y: 140, degree: 30, enabled: false\r\n                },\r\n                2: {\r\n                    x: 100, y: 100, degree: 60\r\n                },\r\n                3: {\r\n                    x: 190, y: 150, degree: 90\r\n                },\r\n            }\r\n        };\r\n    };\r\n    const generateTable = (order, position) => {\r\n        return {\r\n            type: \"TABLE\",\r\n            brand: \"Random\",\r\n            style: \"fillSquare\",\r\n            frameAnimationConfig: {\r\n                1: position,\r\n            },\r\n            orderIndex: order,\r\n            shouldDisplayName: true,\r\n            nameScale: 0.8,\r\n        };\r\n    };\r\n    const getRandomPosition = () => {\r\n        const scale = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randInclusive)(8, 46) / 10;\r\n        return {\r\n            enabled: (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randBoolean)(),\r\n            x: Math.random() * 750,\r\n            y: Math.random() * 750,\r\n            degree: Math.random() * 360,\r\n            scaleX: scale,\r\n            scaleY: scale,\r\n        };\r\n    };\r\n    const sImage1 = {\r\n        title: \"something\",\r\n        imageURL: \"https://s2.loli.net/2022/03/19/kfoHSKL792r4cvD.jpg\",\r\n        width: 400\r\n    };\r\n    const sImage2 = {\r\n        title: \"something\",\r\n        imageURL: \"https://s2.loli.net/2022/03/19/iN9yLYWoE28z5MI.jpg\",\r\n        width: 300\r\n    };\r\n    const getStoryBoard = (image) => {\r\n        return {\r\n            type: \"STORYBOARD\",\r\n            script: \"Some storyboard script\",\r\n            orderIndex: 20,\r\n            namePosition: 'bottom',\r\n            shouldDisplayName: false,\r\n            frameAnimationConfig: {\r\n                1: {\r\n                    x: 100, y: 100, thumbnail: image,\r\n                    degree: 0\r\n                },\r\n                2: {\r\n                    x: 60, y: 60, thumbnail: image,\r\n                    degree: 40\r\n                }\r\n            },\r\n            images: sImages\r\n        };\r\n    };\r\n    const allPropTypes = Object.values(_props_Props__WEBPACK_IMPORTED_MODULE_0__.PropType);\r\n    let allIconPropTypes = [...allPropTypes];\r\n    const allPositions = ['top', 'bottom', 'right', 'left'];\r\n    allIconPropTypes = allIconPropTypes.filter(i => {\r\n        return i != _props_Props__WEBPACK_IMPORTED_MODULE_0__.PropType.STORYBOARD && i != _props_Props__WEBPACK_IMPORTED_MODULE_0__.PropType.SCRIPT;\r\n    });\r\n    const getRandom = (frames) => {\r\n        const type = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.getRandomFromList)(allIconPropTypes);\r\n        const s = {};\r\n        for (let i = 0; i < frames; i++) {\r\n            s[i + 1] = getRandomPosition();\r\n        }\r\n        return Object.assign(Object.assign({}, getSharedProp()), { nameScale: randomNameScale ? (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randInclusive)(2, 20) / 10 : 1, type: type, brand: \"Random\", style: (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.getRandomFromList)(Object.keys(_props_Props__WEBPACK_IMPORTED_MODULE_0__.PropTypeIcons[type])), someValue: 5000, frameAnimationConfig: s, shouldDisplayName: !!(0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randInclusive)(0, 1), namePosition: randomNamePosition ? (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.getRandomFromList)(allPositions) : 'top' });\r\n    };\r\n    const getRandoms = (howMany, frames) => {\r\n        const s = [];\r\n        for (let i = 0; i < howMany; i++) {\r\n            s.push(getRandom(frames));\r\n        }\r\n        return s;\r\n    };\r\n    const getRandomFrameSpeed = (frames) => {\r\n        const s = {};\r\n        for (let i = 0; i < frames; i++) {\r\n            s[i + 1] = (0,_utils_Utils__WEBPACK_IMPORTED_MODULE_2__.randInclusive)(3, 30) / 10;\r\n        }\r\n        return s;\r\n    };\r\n    const rootContainer = document.getElementById(rootRootId);\r\n    let ids = 0;\r\n    const display = (content, config, width, height) => {\r\n        const rootRoot = document.createElement('div');\r\n        rootRoot.id = `root-${ids}`;\r\n        const root = document.createElement('div');\r\n        root.id = `scene-${ids}`;\r\n        ids += 1;\r\n        const contentEl = document.createElement('p');\r\n        contentEl.innerText = content;\r\n        rootRoot.append(contentEl, root);\r\n        rootContainer.append(rootRoot);\r\n        if (width) {\r\n            root.style.width = width;\r\n            root.style.height = height;\r\n        }\r\n        const ctx = new Scene(root.id, Object.assign(Object.assign({}, sharedConfig), config));\r\n        ctx.display();\r\n    };\r\n    let frames = 6;\r\n    display(`A random scene\\n with walls, slower default frame speed (slower animation speed when users skip frames),\\n a dark theme and a director's viewfinder`, {\r\n        frameSpeed: getRandomFrameSpeed(frames),\r\n        defaultOpenPropList: true,\r\n        frameSelectionSpeed: 5,\r\n        lines: [\r\n            [{ x: 300, y: -2 }, { x: 300, y: 100 }, { color: 'var(--scene-base-inv-s2)', width: 3 }],\r\n            [{ x: 300, y: 98 }, { x: 600, y: 98 }, { color: 'var(--scene-base-inv-s2)', width: 3 }],\r\n            [{ x: 0, y: 0 }, { x: 300, y: 0 }, { color: 'var(--scene-base-inv-s2)', width: 3 }]\r\n        ],\r\n        props: [...getRandoms(25, frames), getStoryBoard(sImage2)]\r\n    }, '90vw', '800px');\r\n}\r\ndemo(\"container\");\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/index.ts?");

/***/ }),

/***/ "./src/props/Props.ts":
/*!****************************!*\
  !*** ./src/props/Props.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultAnimationConfig\": () => (/* binding */ DefaultAnimationConfig),\n/* harmony export */   \"DefaultLine\": () => (/* binding */ DefaultLine),\n/* harmony export */   \"DefaultPropConfig\": () => (/* binding */ DefaultPropConfig),\n/* harmony export */   \"ExcludeKeys\": () => (/* binding */ ExcludeKeys),\n/* harmony export */   \"PropType\": () => (/* binding */ PropType),\n/* harmony export */   \"PropTypeIcons\": () => (/* binding */ PropTypeIcons)\n/* harmony export */ });\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\nconst DefaultAnimationConfig = {\r\n    degree: 0,\r\n    scaleX: 1,\r\n    scaleY: 1,\r\n    hide: false,\r\n    enabled: true\r\n};\r\nconst DefaultLine = {\r\n    color: \"var(--scene-base-inv-s2)\",\r\n    width: 1\r\n};\r\nconst DefaultPropConfig = {\r\n    style: \"default\",\r\n    shouldDisplayName: true,\r\n    orderIndex: 0,\r\n    namePosition: 'top',\r\n    nameScale: 1,\r\n    nameXOffset: 0,\r\n    nameYOffset: 0,\r\n    excludeKeys: []\r\n};\r\nconst ExcludeKeys = [\"name\", \"color\", \"type\", \"frameAnimationConfig\", \"script\",\r\n    \"steps\", \"note\", \"shouldDisplayName\", \"id\", \"images\", \"orderIndex\",\r\n    \"namePosition\", \"nameScale\", \"nameXOffset\", \"nameYOffset\", \"excludeKeys\",\r\n    \"nameColor\"];\r\n/** The default PropTypes */\r\nvar PropType;\r\n(function (PropType) {\r\n    PropType[\"TABLE\"] = \"TABLE\";\r\n    PropType[\"LIGHT\"] = \"LIGHT\";\r\n    PropType[\"CHARACTER\"] = \"CHARACTER\";\r\n    PropType[\"CAMERA\"] = \"CAMERA\";\r\n    PropType[\"DISPLAY\"] = \"DISPLAY\";\r\n    // CHAIR = \"CHAIR\",\r\n    PropType[\"SHELF\"] = \"SHELF\";\r\n    PropType[\"MAP\"] = \"MAP\";\r\n    PropType[\"SCRIPT\"] = \"SCRIPT\";\r\n    PropType[\"STORYBOARD\"] = \"STORYBOARD\";\r\n})(PropType || (PropType = {}));\r\nconst PropTypeIcons = {\r\n    TABLE: {\r\n        default: {\r\n            enabledPaths: `<path d=\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\"/>`,\r\n            disabledPaths: `<path d=\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\"/>\r\n  <path d=\"M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z\"/>`\r\n        },\r\n        triangle: {\r\n            enabledPaths: `<path d=\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\"/>`,\r\n            disabledPaths: `<path d=\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\"/>\r\n  <path d=\"M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z\"/>`\r\n        },\r\n        fillTriangle: {\r\n            enabledPaths: `<path fill-rule=\"evenodd\" d=\"M7.022 1.566a1.13 1.13 0 0 1 1.96 0l6.857 11.667c.457.778-.092 1.767-.98 1.767H1.144c-.889 0-1.437-.99-.98-1.767L7.022 1.566z\"/>`,\r\n            disabledPaths: `<path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>`\r\n        },\r\n        square: {\r\n            enabledPaths: `<path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>`,\r\n            disabledPaths: `<path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n  <path d=\"M11.354 4.646a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708l6-6a.5.5 0 0 1 .708 0z\"/>`\r\n        },\r\n        fillSquare: {\r\n            enabledPaths: `<path d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2z\"/>`,\r\n            disabledPaths: `<path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm9.354 5.354-6 6a.5.5 0 0 1-.708-.708l6-6a.5.5 0 0 1 .708.708z\"/>`\r\n        }\r\n    },\r\n    LIGHT: {\r\n        default: {\r\n            enabledPaths: `<path d=\"M2 6a6 6 0 1 1 10.174 4.31c-.203.196-.359.4-.453.619l-.762 1.769A.5.5 0 0 1 10.5 13a.5.5 0 0 1 0 1 .5.5 0 0 1 0 1l-.224.447a1 1 0 0 1-.894.553H6.618a1 1 0 0 1-.894-.553L5.5 15a.5.5 0 0 1 0-1 .5.5 0 0 1 0-1 .5.5 0 0 1-.46-.302l-.761-1.77a1.964 1.964 0 0 0-.453-.618A5.984 5.984 0 0 1 2 6zm6-5a5 5 0 0 0-3.479 8.592c.263.254.514.564.676.941L5.83 12h4.342l.632-1.467c.162-.377.413-.687.676-.941A5 5 0 0 0 8 1z\"/>`,\r\n            disabledPaths: `<path fill-rule=\"evenodd\" d=\"M2.23 4.35A6.004 6.004 0 0 0 2 6c0 1.691.7 3.22 1.826 4.31.203.196.359.4.453.619l.762 1.769A.5.5 0 0 0 5.5 13a.5.5 0 0 0 0 1 .5.5 0 0 0 0 1l.224.447a1 1 0 0 0 .894.553h2.764a1 1 0 0 0 .894-.553L10.5 15a.5.5 0 0 0 0-1 .5.5 0 0 0 0-1 .5.5 0 0 0 .288-.091L9.878 12H5.83l-.632-1.467a2.954 2.954 0 0 0-.676-.941 4.984 4.984 0 0 1-1.455-4.405l-.837-.836zm1.588-2.653.708.707a5 5 0 0 1 7.07 7.07l.707.707a6 6 0 0 0-8.484-8.484zm-2.172-.051a.5.5 0 0 1 .708 0l12 12a.5.5 0 0 1-.708.708l-12-12a.5.5 0 0 1 0-.708z\"/>`\r\n        },\r\n        lightning: {\r\n            enabledPaths: `<path d=\"M11.251.068a.5.5 0 0 1 .227.58L9.677 6.5H13a.5.5 0 0 1 .364.843l-8 8.5a.5.5 0 0 1-.842-.49L6.323 9.5H3a.5.5 0 0 1-.364-.843l8-8.5a.5.5 0 0 1 .615-.09zM4.157 8.5H7a.5.5 0 0 1 .478.647L6.11 13.59l5.732-6.09H9a.5.5 0 0 1-.478-.647L9.89 2.41 4.157 8.5z\"/>`,\r\n            disabledPaths: `<path d=\"M11.251.068a.5.5 0 0 1 .227.58L9.677 6.5H13a.5.5 0 0 1 .364.843l-8 8.5a.5.5 0 0 1-.842-.49L6.323 9.5H3a.5.5 0 0 1-.364-.843l8-8.5a.5.5 0 0 1 .615-.09z\"/>`\r\n        }\r\n    },\r\n    CHARACTER: {\r\n        default: {\r\n            enabledPaths: `<path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\r\n  <path fill-rule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>`,\r\n            disabledPaths: `<path fill-rule=\"evenodd\" d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6.146-2.854a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z\"/>`\r\n        }\r\n    },\r\n    CAMERA: {\r\n        default: {\r\n            enabledPaths: `<path fill-rule=\"evenodd\" d=\"M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556v4.35zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2z\"/>`,\r\n            disabledPaths: `<path fill-rule=\"evenodd\" d=\"M10.961 12.365a1.99 1.99 0 0 0 .522-1.103l3.11 1.382A1 1 0 0 0 16 11.731V4.269a1 1 0 0 0-1.406-.913l-3.111 1.382A2 2 0 0 0 9.5 3H4.272l.714 1H9.5a1 1 0 0 1 1 1v6a1 1 0 0 1-.144.518l.605.847zM1.428 4.18A.999.999 0 0 0 1 5v6a1 1 0 0 0 1 1h5.014l.714 1H2a2 2 0 0 1-2-2V5c0-.675.334-1.272.847-1.634l.58.814zM15 11.73l-3.5-1.555v-4.35L15 4.269v7.462zm-4.407 3.56-10-14 .814-.58 10 14-.814.58z\"/>`\r\n        }\r\n    },\r\n    DISPLAY: {\r\n        default: {\r\n            enabledPaths: `<path d=\"M0 4s0-2 2-2h12s2 0 2 2v6s0 2-2 2h-4c0 .667.083 1.167.25 1.5H11a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1h.75c.167-.333.25-.833.25-1.5H2s-2 0-2-2V4zm1.398-.855a.758.758 0 0 0-.254.302A1.46 1.46 0 0 0 1 4.01V10c0 .325.078.502.145.602.07.105.17.188.302.254a1.464 1.464 0 0 0 .538.143L2.01 11H14c.325 0 .502-.078.602-.145a.758.758 0 0 0 .254-.302 1.464 1.464 0 0 0 .143-.538L15 9.99V4c0-.325-.078-.502-.145-.602a.757.757 0 0 0-.302-.254A1.46 1.46 0 0 0 13.99 3H2c-.325 0-.502.078-.602.145z\"/>`,\r\n            disabledPaths: `<path d=\"M6 12c0 .667-.083 1.167-.25 1.5H5a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1h-.75c-.167-.333-.25-.833-.25-1.5h4c2 0 2-2 2-2V4c0-2-2-2-2-2H2C0 2 0 4 0 4v6c0 2 2 2 2 2h4z\"/>`\r\n        }\r\n    },\r\n    // CHAIR: {\r\n    //     default: {\r\n    //         enabledPaths: `<path d=\"M445.1 338.6l-14.77-32C425.1 295.3 413.7 288 401.2 288H46.76C34.28 288 22.94 295.3 17.7 306.6l-14.77 32c-4.563 9.906-3.766 21.47 2.109 30.66S21.09 384 31.1 384l.001 112c0 8.836 7.164 16 16 16h32c8.838 0 16-7.164 16-16V384h256v112c0 8.836 7.164 16 16 16h31.1c8.838 0 16-7.164 16-16L416 384c10.91 0 21.08-5.562 26.95-14.75S449.6 348.5 445.1 338.6zM111.1 128c0-29.48 16.2-54.1 40-68.87L151.1 256h48l.0092-208h48L247.1 256h48l.0093-196.9C319.8 73 335.1 98.52 335.1 128l-.0094 128h48.03l-.0123-128c0-70.69-57.31-128-128-128H191.1C121.3 0 63.98 57.31 63.98 128l.0158 128h47.97L111.1 128z\"/>`,\r\n    //         disabledPaths: `<path d=\"M445.1 338.6l-14.77-32C425.1 295.3 413.7 288 401.2 288H46.76C34.28 288 22.94 295.3 17.7 306.6l-14.77 32c-4.563 9.906-3.766 21.47 2.109 30.66S21.09 384 31.1 384l.001 112c0 8.836 7.164 16 16 16h32c8.838 0 16-7.164 16-16V384h256v112c0 8.836 7.164 16 16 16h31.1c8.838 0 16-7.164 16-16L416 384c10.91 0 21.08-5.562 26.95-14.75S449.6 348.5 445.1 338.6zM111.1 128c0-29.48 16.2-54.1 40-68.87L151.1 256h48l.0092-208h48L247.1 256h48l.0093-196.9C319.8 73 335.1 98.52 335.1 128l-.0094 128h48.03l-.0123-128c0-70.69-57.31-128-128-128H191.1C121.3 0 63.98 57.31 63.98 128l.0158 128h47.97L111.1 128z\"/>`\r\n    //     }\r\n    // },\r\n    SHELF: {\r\n        default: {\r\n            enabledPaths: `<path d=\"M2.5 0a.5.5 0 0 1 .5.5V2h10V.5a.5.5 0 0 1 1 0v15a.5.5 0 0 1-1 0V15H3v.5a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5zM3 14h10v-3H3v3zm0-4h10V7H3v3zm0-4h10V3H3v3z\"></path>`,\r\n            disabledPaths: `<path d=\"M2.5 0a.5.5 0 0 1 .5.5V2h10V.5a.5.5 0 0 1 1 0v15a.5.5 0 0 1-1 0V15H3v.5a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5zM3 14h10v-3H3v3zm0-4h10V7H3v3zm0-4h10V3H3v3z\"></path>`\r\n        }\r\n    },\r\n    MAP: {\r\n        default: {\r\n            enabledPaths: `<path fill-rule=\"evenodd\" d=\"M3.1 11.2a.5.5 0 0 1 .4-.2H6a.5.5 0 0 1 0 1H3.75L1.5 15h13l-2.25-3H10a.5.5 0 0 1 0-1h2.5a.5.5 0 0 1 .4.2l3 4a.5.5 0 0 1-.4.8H.5a.5.5 0 0 1-.4-.8l3-4z\"></path><path fill-rule=\"evenodd\" d=\"M4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999z\"></path>`,\r\n            disabledPaths: `<path fill-rule=\"evenodd\" d=\"M3.1 11.2a.5.5 0 0 1 .4-.2H6a.5.5 0 0 1 0 1H3.75L1.5 15h13l-2.25-3H10a.5.5 0 0 1 0-1h2.5a.5.5 0 0 1 .4.2l3 4a.5.5 0 0 1-.4.8H.5a.5.5 0 0 1-.4-.8l3-4z\"></path><path fill-rule=\"evenodd\" d=\"M8 1a3 3 0 1 0 0 6 3 3 0 0 0 0-6zM4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999z\"></path>`\r\n        }\r\n    },\r\n    STORYBOARD: {\r\n        default: {\r\n            enabledPaths: `<path d=\"M0 2.5A1.5 1.5 0 0 1 1.5 1h11A1.5 1.5 0 0 1 14 2.5v10.528c0 .3-.05.654-.238.972h.738a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 1 1 0v9a1.5 1.5 0 0 1-1.5 1.5H1.497A1.497 1.497 0 0 1 0 13.5v-11zM12 14c.37 0 .654-.211.853-.441.092-.106.147-.279.147-.531V2.5a.5.5 0 0 0-.5-.5h-11a.5.5 0 0 0-.5.5v11c0 .278.223.5.497.5H12z\"/>\r\n  <path d=\"M2 3h10v2H2V3zm0 3h4v3H2V6zm0 4h4v1H2v-1zm0 2h4v1H2v-1zm5-6h2v1H7V6zm3 0h2v1h-2V6zM7 8h2v1H7V8zm3 0h2v1h-2V8zm-3 2h2v1H7v-1zm3 0h2v1h-2v-1zm-3 2h2v1H7v-1zm3 0h2v1h-2v-1z\"/>`,\r\n            disabledPaths: `<path d=\"M0 2.5A1.5 1.5 0 0 1 1.5 1h11A1.5 1.5 0 0 1 14 2.5v10.528c0 .3-.05.654-.238.972h.738a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 1 1 0v9a1.5 1.5 0 0 1-1.5 1.5H1.497A1.497 1.497 0 0 1 0 13.5v-11zM12 14c.37 0 .654-.211.853-.441.092-.106.147-.279.147-.531V2.5a.5.5 0 0 0-.5-.5h-11a.5.5 0 0 0-.5.5v11c0 .278.223.5.497.5H12z\"/>\r\n  <path d=\"M2 3h10v2H2V3zm0 3h4v3H2V6zm0 4h4v1H2v-1zm0 2h4v1H2v-1zm5-6h2v1H7V6zm3 0h2v1h-2V6zM7 8h2v1H7V8zm3 0h2v1h-2V8zm-3 2h2v1H7v-1zm3 0h2v1h-2v-1zm-3 2h2v1H7v-1zm3 0h2v1h-2v-1z\"/>`\r\n        }\r\n    },\r\n    SCRIPT: {\r\n        default: {\r\n            enabledPaths: ``,\r\n            disabledPaths: ``\r\n        }\r\n    },\r\n};\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/props/Props.ts?");

/***/ }),

/***/ "./src/state/State.ts":
/*!****************************!*\
  !*** ./src/state/State.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createState\": () => (/* binding */ createState),\n/* harmony export */   \"default\": () => (/* binding */ State)\n/* harmony export */ });\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\nclass State {\r\n    constructor(defaultValue) {\r\n        this._components = [];\r\n        this._componentsActions = [];\r\n        this._state = defaultValue;\r\n    }\r\n    get() {\r\n        return this._state;\r\n    }\r\n    getPrevious() {\r\n        return this._previous_state;\r\n    }\r\n    render() {\r\n        this._components.forEach(component => {\r\n            component.renderComponent();\r\n        });\r\n    }\r\n    set(value, forceUpdate) {\r\n        if (forceUpdate || value !== this._state) {\r\n            this._componentsActions.forEach(([, actionBefore,]) => {\r\n                if (actionBefore) {\r\n                    actionBefore(this.get(), value, this._previous_state);\r\n                }\r\n            });\r\n            this._previous_state = this._state;\r\n            this._state = value;\r\n            this._componentsActions.forEach(([, , actionAfter]) => {\r\n                if (actionAfter) {\r\n                    actionAfter(this._previous_state, this.get());\r\n                }\r\n            });\r\n            this.render();\r\n        }\r\n    }\r\n    unsubscribe(component) {\r\n        this._components = this._components.filter(c => c !== component);\r\n        this._componentsActions = this._componentsActions.filter(c => c[0] !== component);\r\n    }\r\n    subscribe(component) {\r\n        this._components.push(component);\r\n    }\r\n    subscribeActions(component, actionBefore, actionAfter) {\r\n        this._componentsActions.push([component, actionBefore, actionAfter]);\r\n    }\r\n}\r\nfunction createState(defaultValue) {\r\n    return new State(defaultValue);\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/state/State.ts?");

/***/ }),

/***/ "./src/utils/PropTupleSet.ts":
/*!***********************************!*\
  !*** ./src/utils/PropTupleSet.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PropTupleSet)\n/* harmony export */ });\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\nclass PropTupleSet extends Set {\r\n    static sortIdTuple(id) {\r\n        return id[0] < id[1] ? [id[0], id[1]] : [id[1], id[0]];\r\n    }\r\n    addIdTuple(id) {\r\n        return super.add(PropTupleSet.sortIdTuple(id).join(','));\r\n    }\r\n    hasIdTuple(id) {\r\n        return super.has(PropTupleSet.sortIdTuple(id).join(','));\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/utils/PropTupleSet.ts?");

/***/ }),

/***/ "./src/utils/Utils.ts":
/*!****************************!*\
  !*** ./src/utils/Utils.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"camelToDisplay\": () => (/* binding */ camelToDisplay),\n/* harmony export */   \"convertTypeToReadable\": () => (/* binding */ convertTypeToReadable),\n/* harmony export */   \"createDialog\": () => (/* binding */ createDialog),\n/* harmony export */   \"createElement\": () => (/* binding */ createElement),\n/* harmony export */   \"createIconFontElement\": () => (/* binding */ createIconFontElement),\n/* harmony export */   \"createSVGElement\": () => (/* binding */ createSVGElement),\n/* harmony export */   \"createSVGIcon\": () => (/* binding */ createSVGIcon),\n/* harmony export */   \"createSpan\": () => (/* binding */ createSpan),\n/* harmony export */   \"extractPathD\": () => (/* binding */ extractPathD),\n/* harmony export */   \"flatObject\": () => (/* binding */ flatObject),\n/* harmony export */   \"forEachPathHTML\": () => (/* binding */ forEachPathHTML),\n/* harmony export */   \"generateDarkColor\": () => (/* binding */ generateDarkColor),\n/* harmony export */   \"generateLightColor\": () => (/* binding */ generateLightColor),\n/* harmony export */   \"getLineGroup\": () => (/* binding */ getLineGroup),\n/* harmony export */   \"getPathGroupByHTML\": () => (/* binding */ getPathGroupByHTML),\n/* harmony export */   \"getRandomFromList\": () => (/* binding */ getRandomFromList),\n/* harmony export */   \"positionToDisplay\": () => (/* binding */ positionToDisplay),\n/* harmony export */   \"randBoolean\": () => (/* binding */ randBoolean),\n/* harmony export */   \"randInclusive\": () => (/* binding */ randInclusive),\n/* harmony export */   \"setClassList\": () => (/* binding */ setClassList),\n/* harmony export */   \"setStyles\": () => (/* binding */ setStyles)\n/* harmony export */ });\n/*\r\n * Copyright 2022 Dan Lyu.\r\n */\r\nfunction convertTypeToReadable(type) {\r\n    return `${type.charAt(0).toUpperCase()}${type.slice(1).toLowerCase()}`;\r\n}\r\nfunction createElement(html) {\r\n    const template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n    return template.content.children[0];\r\n}\r\n// Min, Max both inclusive\r\nfunction randInclusive(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nfunction randBoolean() {\r\n    return !!randInclusive(0, 1);\r\n}\r\nfunction getRandomFromList(s) {\r\n    return s[randInclusive(0, s.length - 1)];\r\n}\r\nfunction generateDarkColor() {\r\n    const c = () => randInclusive(0, 125);\r\n    return `rgb(${c()},${c()},${c()})`;\r\n}\r\nfunction generateLightColor() {\r\n    const c = () => randInclusive(125, 255);\r\n    return `rgb(${c()},${c()},${c()})`;\r\n}\r\nfunction createSVGElement(width, height) {\r\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n    svg.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\r\n    svg.setAttribute(\"width\", String(width));\r\n    svg.setAttribute(\"height\", String(height));\r\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\r\n    return svg;\r\n}\r\nfunction createIconFontElement(id, ...classes) {\r\n    const icon = document.createElement('i');\r\n    if (id) {\r\n        icon.id = id;\r\n    }\r\n    classes.forEach(c => icon.classList.add(c));\r\n    return icon;\r\n}\r\nfunction createSVGIcon(scale) {\r\n    const svg = createSVGElement(16, 16);\r\n    svg.setAttribute(\"transform\", `scale(${scale} ${scale})`);\r\n    return svg;\r\n}\r\nfunction setClassList(element, ...classes) {\r\n    element.removeAttribute(\"class\");\r\n    element.classList.add(...classes);\r\n}\r\nfunction getLineGroup(startX, startY, endX, endY, width, color) {\r\n    return `<g stroke-width=\"${width}\" stroke=\"${color}\"><path d=\"M${startX} ${startY}  L${endX} ${endY}\"/></g>`;\r\n}\r\nfunction setStyles(styleKey, styleValue, ...elements) {\r\n    elements.forEach(e => {\r\n        if (e) {\r\n            e.style[styleKey] = styleValue;\r\n        }\r\n    });\r\n}\r\nfunction positionToDisplay(position) {\r\n    const pos = Object.assign({}, position);\r\n    for (let key in pos) {\r\n        const value = pos[key];\r\n        if (typeof value === 'number') {\r\n            pos[key] = key.includes('scale') ? Math.round(value * 10) / 10 : Math.round(value);\r\n        }\r\n    }\r\n    return pos;\r\n}\r\nfunction camelToDisplay(input) {\r\n    input = input.charAt(0).toUpperCase() + input.slice(1);\r\n    return input.replace(/[A-Z]/g, letter => ` ${letter}`).trim();\r\n}\r\nfunction createSpan(text, color) {\r\n    const span = document.createElement(\"span\");\r\n    span.innerText = text;\r\n    span.style.color = color ? color : \"black\";\r\n    return span;\r\n}\r\nfunction getPathGroupByHTML(pathsHTML, prop, color) {\r\n    let pathId = 0;\r\n    const pathGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n    forEachPathHTML(pathsHTML, (pathHTML) => {\r\n        const path = createElement(pathHTML);\r\n        // let path = (new DOMParser().parseFromString(pathHTML, 'image/svg+xml')).firstChild\r\n        path.style.fill = color ? color : prop.color;\r\n        pathGroup.appendChild(path);\r\n        pathId++;\r\n    });\r\n    return pathGroup;\r\n}\r\nfunction forEachPathHTML(pathsHTML, f) {\r\n    pathsHTML.match(/<path.*?\\/>|<path.*?><\\/path>/g).forEach(pathHTML => {\r\n        f(pathHTML);\r\n    });\r\n}\r\nfunction extractPathD(pathHTML) {\r\n    const res = pathHTML.match(/d=[\"'`](.*?)[\"'`]/);\r\n    return res == null ? \"\" : res[1];\r\n}\r\nfunction flatObject(obj) {\r\n    const newObj = {};\r\n    const _flatValues = (_obj, rootKeys) => {\r\n        Object.keys(_obj).sort().forEach(key => {\r\n            const _rootKeys = rootKeys;\r\n            rootKeys = rootKeys + `.${key}`;\r\n            if (typeof _obj[key] === \"object\") {\r\n                _flatValues(_obj[key], rootKeys);\r\n            }\r\n            else {\r\n                newObj[rootKeys.slice(1)] = _obj[key];\r\n            }\r\n            rootKeys = _rootKeys;\r\n        });\r\n    };\r\n    _flatValues(obj, \"\");\r\n    return newObj;\r\n}\r\nfunction createDialog(title, content) {\r\n    const contentString = typeof content === 'string' ? content : content.outerHTML;\r\n    return `<div class=\"modal\">\r\n                <div class=\"modal__header\">\r\n                <span class=\"modal__header__title\">${title}</span><span class=\"bi bi-x modal__header__close\"></span>\r\n                </div>\r\n                <div class=\"modal__content\">\r\n                ${contentString}\r\n                </div>\r\n            </div>`;\r\n}\r\n\n\n//# sourceURL=webpack://sceneBlocking/./src/utils/Utils.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});