"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6322],{4326:function(e,n,r){r.r(n),r.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return f}});var o=r(7462),t=r(3366),i=(r(7294),r(3905)),a=r(1148),d=["components"],s={title:"Render Stack Order",sidebar_position:6,description:"Change the render stack order of your props"},l=void 0,p={unversionedId:"prop-config/render-order",id:"prop-config/render-order",title:"Render Stack Order",description:"Change the render stack order of your props",source:"@site/docs/prop-config/render-order.mdx",sourceDirName:"prop-config",slug:"/prop-config/render-order",permalink:"/docs/prop-config/render-order",draft:!1,editUrl:"https://github.com/csc309-winter-2022/js-library-lyudan1/tree/main/docs/docs/prop-config/render-order.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Render Stack Order",sidebar_position:6,description:"Change the render stack order of your props"},sidebar:"tutorialSidebar",previous:{title:"Type and Style",permalink:"/docs/prop-config/type-style"},next:{title:"Scripts, Notes, Images, Steps",permalink:"/docs/prop-config/prop-dialog-properties"}},c={},f=[{value:"Default Behavior",id:"default-behavior",level:2},{value:"Setting prop&#39;s stack order index",id:"setting-props-stack-order-index",level:2}],u={toc:f};function y(e){var n=e.components,r=(0,t.Z)(e,d);return(0,i.kt)("wrapper",(0,o.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"default-behavior"},"Default Behavior"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"By default, props will be rendered in the order they are added.\nIf a prop gets added later, it will be on top of the prop added earlier (",(0,i.kt)("em",{parentName:"li"},"i.e."),", have lower index in the array).")),(0,i.kt)("p",null,"See how 3 tables display (table 3 has the highest order index since it was added at the last):"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Code snippet used to generate the following scene"),(0,i.kt)(a.$9,{generator:"new GlobalConfigGenerator()\n    .addProp((generator) => {\n            generator.type('TABLE')\n                .style('fillSquare')\n                .addPosition((positionGenerator) => {\n                    positionGenerator.x(0).y(0).scale(10)\n                })\n    })\n    .addProp((generator) => {\n        generator.type('TABLE')\n            .style('fillSquare')\n            .addPosition((positionGenerator) => {\n                positionGenerator.x(-50).y(-50).scale(8)\n            })\n    })\n    .addProp((generator) => {\n        generator.type('TABLE')\n            .style('fillSquare')\n            .addPosition((positionGenerator) => {\n                positionGenerator.x(30).y(30).scale(5)\n            })\n    })",config:'config.props = [\n      {\n        "frameAnimationConfig": {\n          "1": {\n            "x": 0,\n            "y": 0,\n            "scaleX": 10,\n            "scaleY": 10\n          }\n        },\n        "type": "TABLE",\n        "style": "fillSquare"\n      },\n      {\n        "frameAnimationConfig": {\n          "1": {\n            "x": -50,\n            "y": -50,\n            "scaleX": 8,\n            "scaleY": 8\n          }\n        },\n        "type": "TABLE",\n        "style": "fillSquare"\n      },\n      {\n        "frameAnimationConfig": {\n          "1": {\n            "x": 30,\n            "y": 30,\n            "scaleX": 5,\n            "scaleY": 5\n          }\n        },\n        "type": "TABLE",\n        "style": "fillSquare"\n      }\n    ]',mdxType:"GeneratorConfigBlock"})),(0,i.kt)(a.PV,(0,o.Z)({},a.hp,{mdxType:"SceneOnlyShort"})),(0,i.kt)("h2",{id:"setting-props-stack-order-index"},"Setting prop's stack order index"),(0,i.kt)("p",null,"You can set a prop's order index (higher order index props have higher stack order (",(0,i.kt)("em",{parentName:"p"},"i.e.,")," they will be on top of props with lower stack order)):"),(0,i.kt)(a.$9,{generator:"new GlobalConfigGenerator()\n    .addProp((generator) => {\n            generator.type('TABLE')\n                .style('fillSquare')\n                .renderOrder(1)\n                .addPosition((positionGenerator) => {\n                    positionGenerator.x(0).y(0).scale(10)\n                })\n        })\n    .addProp((generator) => {\n        generator.type('TABLE')\n            .style('fillSquare')\n            .renderOrder(5)\n            .addPosition((positionGenerator) => {\n                positionGenerator.x(-50).y(-50).scale(8)\n            })\n    })\n    .addProp((generator) => {\n        generator.type('TABLE')\n            .style('fillSquare')\n            .renderOrder(4)\n            .addPosition((positionGenerator) => {\n                positionGenerator.x(30).y(30).scale(5)\n            })\n    })",config:'config.props = [\n      {\n        "frameAnimationConfig": {\n          "1": {\n            "x": 0,\n            "y": 0,\n            "scaleX": 10,\n            "scaleY": 10\n          }\n        },\n        "type": "TABLE",\n        "style": "fillSquare",\n        "orderIndex": 1\n      },\n      {\n        "frameAnimationConfig": {\n          "1": {\n            "x": -50,\n            "y": -50,\n            "scaleX": 8,\n            "scaleY": 8\n          }\n        },\n        "type": "TABLE",\n        "style": "fillSquare",\n        "orderIndex": 5\n      },\n      {\n        "frameAnimationConfig": {\n          "1": {\n            "x": 30,\n            "y": 30,\n            "scaleX": 5,\n            "scaleY": 5\n          }\n        },\n        "type": "TABLE",\n        "style": "fillSquare",\n        "orderIndex": 4\n      }\n    ]',mdxType:"GeneratorConfigBlock"}),(0,i.kt)(a.PV,(0,o.Z)({},a.ZI,{mdxType:"SceneOnlyShort"})))}y.isMDXComponent=!0}}]);